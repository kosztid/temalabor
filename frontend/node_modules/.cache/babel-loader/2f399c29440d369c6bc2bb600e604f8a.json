{"ast":null,"code":"var _jsxFileName = \"/Users/dominik/WebstormProjects/temalabmatui/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Box, createTheme, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      name: this.props.name,\n      description: this.props.description,\n      open: false,\n      namemodifyvalue: null,\n      descriptionmodifyvalue: null\n    };\n  }\n\n  closeModify() {\n    let namemod = this.state.namemodifyvalue;\n    let desmod = this.state.descriptionmodifyvalue;\n    this.setState({\n      open: false,\n      name: namemod,\n      description: desmod\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"N\\xE9v:\", this.state.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Le\\xEDr\\xE1s:\", this.state.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.updataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.downdataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.emptydataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: 300\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 61\n            }, this),\n            onClick: () => this.setState({\n              open: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: this.state.open,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              children: \"Modify a Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"To modify a Task please edit the fields below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: () => this.closeModify(),\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Task:\", /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    value: this.state.valuemodify,\n                    onChange: e => this.setState({\n                      valuemodify: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this), \"Description:\", /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    value: this.state.value2modify,\n                    onChange: e => this.setState({\n                      value2modify: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => this.setState({\n                      open: false\n                    }),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"text\",\n                    value: \"Submit\",\n                    children: \"Modify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ProjectBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: Array().fill(''),\n      id: this.props.value,\n      datalines: Array().fill(''),\n      datas: Array().fill(''),\n      ids: Array().fill(''),\n      opens: Array().fill(false),\n      test: 'testname',\n      value: '',\n      value2: '',\n      valuemodify: 'aaaaa',\n      value2modify: 'bbbbb',\n      count: 0,\n      open: false,\n      modifydx: 0,\n      init: false,\n      max: false,\n      maxid: 0\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmitmodify = this.handleSubmitmodify.bind(this);\n  }\n\n  handleClickOpenmodify(dx) {\n    let boolarray = this.state.opens;\n    boolarray[dx] = true;\n    let array1 = this.state.datalines;\n    let array2 = this.state.datas;\n    this.setState({\n      opens: boolarray,\n      valuemodify: array1[dx],\n      value2modify: array2[dx],\n      modifydx: dx\n    });\n  }\n\n  handleClosemodify(dx) {\n    let boolarray = this.state.opens;\n    boolarray[dx] = false;\n    this.setState({\n      opens: boolarray\n    });\n  }\n\n  initlines() {\n    if (this.state.init === false) {\n      this.setState({\n        init: true\n      });\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.adddatalines(data)).catch(error => console.error('Unable to get items.', error));\n    }\n  }\n\n  adddatalines(data) {\n    var k = 0;\n    let todolist = [];\n    let cnt = this.state.count;\n\n    for (k = 0; k < data.length; k++) {\n      if (data[k].columnID === this.state.id) {\n        console.log(data[k].name);\n        todolist.push( /*#__PURE__*/_jsxDEV(Todo, {\n          name: data[k].name,\n          description: data[k].description,\n          id: data[k].id,\n          downdataline: i => this.downdataline(i),\n          updataline: i => this.updataline(i),\n          emptydataline: i => this.emptydataline(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 31\n        }, this));\n        cnt++;\n      }\n    }\n\n    this.setState({\n      todos: todolist,\n      count: cnt\n    });\n  }\n\n  getmaxid() {\n    /*  if(this.state.max===false) {\n          const uri = '/api/todoitems';\n          fetch(uri)\n              .then(response => response.json())\n              .then(data => this.maxid(data))\n              .catch(error => console.error('Unable to get items.', error));\n      }\n       */\n    if (this.state.max === false) {\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n    }\n\n    setTimeout(() => {\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n    }, 5000);\n  }\n\n  maxid(data) {\n    var dx = 0;\n\n    for (var k = 0; k < data.length; k++) {\n      dx = data[k].id;\n    }\n\n    this.setState({\n      maxid: dx,\n      max: true\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let newarray = this.state.datalines;\n    let newarray2 = this.state.datas;\n    let newarray3 = this.state.ids;\n    let prevcount = this.state.count;\n    newarray[this.state.count] = this.state.value;\n    newarray2[this.state.count] = this.state.value2;\n    newarray3[this.state.count] = this.state.maxid + 1;\n    let todoslist = this.state.todos;\n    todoslist.push( /*#__PURE__*/_jsxDEV(Todo, {\n      name: this.state.value,\n      description: this.state.value2,\n      id: this.state.maxid + 1,\n      downdataline: i => this.downdataline(i),\n      updataline: i => this.updataline(i),\n      emptydataline: i => this.emptydataline(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 24\n    }, this));\n    const item = {\n      id: this.state.maxid + 1,\n      columnID: this.state.id,\n      name: this.state.value,\n      description: this.state.value2,\n      position: 1,\n      column: null\n    };\n    fetch('api/todoitems', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).catch(error => console.error('Unable to add item.', error));\n    this.setState({\n      count: prevcount + 1,\n      datalines: newarray,\n      datas: newarray2,\n      ids: newarray3,\n      value: '',\n      value2: '',\n      open: false,\n      max: false,\n      todos: todoslist\n    });\n  }\n\n  handleSubmitmodify(event) {\n    //this.setState({output: this.state.value })\n    event.preventDefault();\n    let newarray = this.state.datalines;\n    let newarray2 = this.state.datas;\n    let dx = this.state.modifydx;\n    newarray[dx] = this.state.valuemodify;\n    newarray2[dx] = this.state.value2modify;\n    let id = this.state.ids[dx];\n    const item = {};\n    fetch('/api/todoitems/' + [id], {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify({\n        id: id,\n        columnID: this.state.id,\n        name: this.state.valuemodify,\n        description: this.state.value2modify,\n        position: 1,\n        column: null\n      })\n    }).catch(error => console.error('Unable to add item.', error));\n    /*    .then(()=>this.setState({\n        datalines:newarray,\n        datas:newarray2,\n        valuemodify:'',\n    }))*/\n\n    this.handleClosemodify(dx);\n  }\n\n  emptydataline(i) {\n    fetch(\"/api/todoitems/\" + i, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n    this.setState({\n      todos: Array().fill(''),\n      init: false\n    });\n  }\n\n  updataline(k) {\n    let i = 0;\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.toMove(data, k, 1)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  downdataline(k) {\n    let i = 0;\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.toMove(data, k, 0)).catch(error => console.error('Unable to get items.', error));\n  } //direction 0 downdata, 1 updata\n\n\n  toMove(data, k, direction) {\n    let dx;\n    let datalist = [];\n\n    for (let d = 0; d < data.length; d++) {\n      datalist.push(data[d]);\n    }\n\n    for (let i = 0; i < datalist.length; i++) {\n      if (datalist[i].id === k) {\n        dx = i;\n      }\n    }\n\n    const itemfelso = {\n      id: datalist[dx].id,\n      columnID: this.state.id,\n      name: datalist[dx - 1].name,\n      description: datalist[dx - 1].description,\n      position: 1,\n      column: null\n    };\n    const itemfofel = {\n      id: datalist[dx - 1].id,\n      columnID: this.state.id,\n      name: datalist[dx].name,\n      description: datalist[dx].description,\n      position: 1,\n      column: null\n    };\n    const itemfo = {\n      id: datalist[dx + 1].id,\n      columnID: this.state.id,\n      name: datalist[dx].name,\n      description: datalist[dx].description,\n      position: 1,\n      column: null\n    };\n    const itemalso = {\n      id: datalist[dx].id,\n      columnID: this.state.id,\n      name: datalist[dx + 1].name,\n      description: datalist[dx + 1].description,\n      position: 1,\n      column: null\n    };\n\n    if (direction == 0) {\n      this.fetchback(itemalso.id, itemalso, itemfo.id, itemfo);\n    }\n\n    if (direction == 1) {\n      this.fetchback(itemfofel.id, itemfofel, itemfelso.id, itemfelso);\n    }\n  }\n\n  fetchback(i, item, i2, item2) {\n    fetch(\"/api/todoitems/\" + i, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).catch(error => console.error('Unable to add item.', error));\n    fetch(\"/api/todoitems/\" + i2, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item2)\n    }).catch(error => console.error('Unable to add item.', error));\n  }\n\n  renderdatalines() {\n    let renderlines = [];\n    if (this.state.init === false) return;\n\n    for (let k = 0; k < 10; k++) {\n      renderlines.push(this.state.todos[k]);\n    }\n\n    return renderlines;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [this.initlines(), this.getmaxid(), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          width: 300\n        },\n        startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 53\n        }, this),\n        onClick: () => this.setState({\n          open: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add a Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"To add a new Task please fill the fields below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Task:\", /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                type: \"text\",\n                value: this.state.value,\n                onChange: e => this.setState({\n                  value: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 29\n              }, this), \"Description:\", /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                value: this.state.value2,\n                onChange: e => this.setState({\n                  value2: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.setState({\n                  open: false\n                }),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"text\",\n                value: \"Submit\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 96\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), this.renderdatalines()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfprojects: 0,\n      projectArray: Array(3).fill(''),\n      maxprojectsnumber: 10,\n      init: false,\n      maxid: 0\n    };\n  }\n\n  fetchcolumn(i) {\n    const item = {\n      ID: i,\n      TodoItems: null\n    };\n    fetch('api/columns', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).catch(error => console.error('Unable to add item.', error));\n  }\n\n  addProject(dx) {\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    projects.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {\n        value: dx + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }, this));\n    this.fetchcolumn(dx + 1);\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1\n    });\n  }\n\n  addProjectwithoutfetch(dx) {\n    console.log(\"happened\" + dx);\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    projects.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {\n        value: dx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1\n    });\n  }\n\n  clearProjects() {\n    this.deletealltodos();\n    this.setState({\n      projectArray: Array(0)\n    });\n  }\n\n  addlist(data) {\n    for (var k = 0; k < data.length; k++) {\n      this.addProjectwithoutfetch(data[k].id);\n    }\n  }\n\n  initcolumns() {\n    if (this.state.init === false) {\n      this.setState({\n        init: true\n      });\n      const uri = '/api/columns';\n      fetch(uri).then(response => response.json()).then(data => this.addlist(data)).catch(error => console.error('Unable to get items.', error));\n    }\n  }\n\n  maxid(data) {\n    let dx = 0;\n\n    for (let k = 0; k < data.length; k++) {\n      dx = data[k].id;\n    }\n\n    this.setState({\n      maxid: dx\n    });\n\n    for (let l = 1; l <= dx; l++) {\n      this.deletetodo(l);\n    }\n\n    for (let h = 1; h <= this.state.numberOfprojects; h++) {\n      this.deletecolumns(h);\n    }\n\n    this.setState({\n      numberOfprojects: 0\n    });\n  }\n\n  deletecolumns(h) {\n    fetch(\"/api/columns/\" + h, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n  }\n\n  deletetodo(id) {\n    fetch(\"/api/todoitems/\" + id, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n  }\n\n  deletealltodos() {\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [this.initcolumns(), this.state.projectArray, /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              onClick: () => this.addProject(this.state.numberOfprojects),\n              children: \" Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              onClick: () => this.clearProjects(),\n              children: \" Clear Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 572,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/dominik/WebstormProjects/temalabmatui/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Card","CardActions","CardContent","Button","Typography","ArrowUpwardIcon","ArrowDownwardIcon","AddCircleIcon","DeleteIcon","TextField","Dialog","DialogContent","DialogContentText","DialogTitle","Box","createTheme","Grid","Todo","Component","constructor","props","state","id","name","description","open","namemodifyvalue","descriptionmodifyvalue","closeModify","namemod","desmod","setState","render","maxWidth","updataline","downdataline","emptydataline","width","valuemodify","e","target","value","value2modify","ProjectBox","todos","Array","fill","datalines","datas","ids","opens","test","value2","count","modifydx","init","max","maxid","handleSubmit","bind","handleSubmitmodify","handleClickOpenmodify","dx","boolarray","array1","array2","handleClosemodify","initlines","uri","fetch","then","response","json","data","adddatalines","catch","error","console","k","todolist","cnt","length","columnID","log","push","i","getmaxid","setTimeout","event","preventDefault","newarray","newarray2","newarray3","prevcount","todoslist","item","position","column","method","headers","body","JSON","stringify","toMove","direction","datalist","d","itemfelso","itemfofel","itemfo","itemalso","fetchback","i2","item2","renderdatalines","renderlines","Main","numberOfprojects","projectArray","maxprojectsnumber","fetchcolumn","ID","TodoItems","addProject","projects","j","addProjectwithoutfetch","clearProjects","deletealltodos","addlist","initcolumns","l","deletetodo","h","deletecolumns","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {Box, createTheme, Grid} from \"@material-ui/core\";\n\nclass Todo extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            id:this.props.id,\n            name:this.props.name,\n            description:this.props.description,\n            open:false,\n            namemodifyvalue:null,\n            descriptionmodifyvalue:null\n\n        }\n\n    }\n    closeModify(){\n        let namemod=this.state.namemodifyvalue\n        let desmod=this.state.descriptionmodifyvalue\n        this.setState({\n            open:false,\n            name:namemod,\n            description:desmod\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"margin\">\n                <Card sx={{maxWidth:300}}>\n                    <CardContent>\n                        <Typography>\n                            Név:{this.state.name}\n                        </Typography>\n                        <Typography>\n                            Leírás:{this.state.description}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button startIcon={<ArrowUpwardIcon/>} onClick={()=>this.props.updataline(this.state.id)}/>\n                        <Button startIcon={<ArrowDownwardIcon/>} onClick={()=>this.props.downdataline(this.state.id)} />\n                        <Button startIcon={<DeleteIcon/>} onClick={()=>this.props.emptydataline(this.state.id)}/>\n                        <Button sx={{width:300}} startIcon={<AddCircleIcon/>} onClick={()=>this.setState({open:true})}/>\n                        <Dialog open={this.state.open} alignItems=\"center\">\n                            <DialogTitle>Modify a Task</DialogTitle>\n                            <DialogContentText >To modify a Task please edit the fields below</DialogContentText>\n                            <DialogContent>\n                                <form onSubmit={()=>this.closeModify()}>\n                                    <label>\n                                        Task:\n                                        <TextField type=\"text\" value={this.state.valuemodify} onChange={(e)=>this.setState({valuemodify: e.target.value})} />\n                                        Description:\n                                        <TextField type=\"text\" value={this.state.value2modify} onChange={(e)=>this.setState({value2modify: e.target.value})} />\n                                    </label>\n                                    <div> <Button onClick={()=>this.setState({open:false})}>Cancel</Button>\n                                        <Button type=\"submit\" variant=\"text\" value=\"Submit\">Modify</Button>\n                                    </div>\n                                </form>\n                            </DialogContent>\n                        </Dialog>\n                    </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n\nclass ProjectBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            todos:Array().fill(''),\n            id:this.props.value,\n            datalines:Array().fill(''),\n            datas:Array().fill(''),\n            ids:Array().fill(''),\n            opens:Array().fill(false),\n            test:'testname',\n            value:'',\n            value2:'',\n            valuemodify:'aaaaa',\n            value2modify:'bbbbb',\n            count:0,\n            open:false,\n            modifydx:0,\n            init:false,\n            max:false,\n            maxid:0\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSubmitmodify = this.handleSubmitmodify.bind(this);\n    }\n\n    handleClickOpenmodify(dx){\n        let boolarray=this.state.opens\n        boolarray[dx]=true\n        let array1=this.state.datalines\n        let array2=this.state.datas\n        this.setState({opens:boolarray,\n        valuemodify:array1[dx],\n            value2modify:array2[dx],\n            modifydx:dx\n        })\n    }\n    handleClosemodify(dx){\n        let boolarray=this.state.opens\n        boolarray[dx]=false\n        this.setState({opens:boolarray})\n    }\n\n\n    initlines(){\n        if(this.state.init===false) {\n            this.setState({init:true})\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.adddatalines(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n    }\n    adddatalines(data){\n        var k=0\n        let todolist=[]\n        let cnt=this.state.count\n        for(k=0;k<data.length;k++){\n            if(data[k].columnID===this.state.id){\n                console.log(data[k].name)\n                todolist.push(<Todo name={data[k].name}\n                                    description={data[k].description}\n                                    id={data[k].id}\n                                 downdataline={(i)=>this.downdataline(i)}\n                                 updataline={(i)=>this.updataline(i)}\n                                 emptydataline={(i)=>this.emptydataline(i)}\n\n                />)\n                cnt++\n                }\n            }\n        this.setState({todos:todolist,count:cnt})\n\n        }\n\n    getmaxid(){\n      /*  if(this.state.max===false) {\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n\n\n       */\n        if(this.state.max===false){\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n\n        setTimeout(() => {  const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error)); }, 5000);\n    }\n    maxid(data){\n        var dx=0;\n        for(var k=0;k<data.length;k++){\n            dx=data[k].id\n        }\n        this.setState({\n            maxid:dx,\n            max:true\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let newarray=this.state.datalines\n        let newarray2=this.state.datas\n        let newarray3=this.state.ids\n        let prevcount=this.state.count\n        newarray[this.state.count]=this.state.value\n        newarray2[this.state.count]=this.state.value2\n        newarray3[this.state.count]=this.state.maxid+1\n        let todoslist=this.state.todos\n        todoslist.push(<Todo name={this.state.value}\n                            description={this.state.value2}\n                            id={this.state.maxid+1}\n                            downdataline={(i)=>this.downdataline(i)}\n                            updataline={(i)=>this.updataline(i)}\n                            emptydataline={(i)=>this.emptydataline(i)}\n        />)\n        const item={\n            id:this.state.maxid+1,\n            columnID:this.state.id,\n            name:this.state.value,\n            description:this.state.value2,\n            position:1,\n            column:null\n        }\n        fetch('api/todoitems', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n            })\n            .then(response => response.json())\n            .catch(error => console.error('Unable to add item.', error))\n        this.setState({\n            count:prevcount+1,\n            datalines:newarray,\n            datas:newarray2,\n            ids:newarray3,\n            value:'',\n            value2:'',\n            open:false,\n            max:false,\n            todos:todoslist\n        })\n\n\n\n    }\n\n\n    handleSubmitmodify(event) {\n        //this.setState({output: this.state.value })\n        event.preventDefault();\n        let newarray=this.state.datalines\n        let newarray2=this.state.datas\n        let dx=this.state.modifydx\n        newarray[dx]=this.state.valuemodify\n        newarray2[dx]=this.state.value2modify\n        let id=this.state.ids[dx]\n\n        const item={\n\n        }\n        fetch('/api/todoitems/'+[id], {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n            },\n            body: JSON.stringify({\n                    id:id,\n                    columnID:this.state.id,\n                    name:this.state.valuemodify,\n                    description:this.state.value2modify,\n                    position:1,\n                    column:null\n            })\n        }).catch(error => console.error('Unable to add item.', error))\n        /*    .then(()=>this.setState({\n            datalines:newarray,\n            datas:newarray2,\n            valuemodify:'',\n        }))*/\n\n\n        this.handleClosemodify(dx)\n    }\n\n    emptydataline(i){\n\n        fetch(\"/api/todoitems/\"+i, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n        this.setState({todos:Array().fill(''),init:false})\n    }\n    updataline(k){\n        let i=0\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.toMove(data,k,1))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n\n    downdataline(k){\n        let i=0\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.toMove(data,k,0))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n\n    //direction 0 downdata, 1 updata\n    toMove(data,k,direction){\n        let dx\n        let datalist=[]\n        for(let d=0;d<data.length;d++){\n            datalist.push(data[d])\n        }\n        for(let i=0;i<datalist.length;i++){\n            if(datalist[i].id===k){\n                dx=i\n            }\n        }\n        const itemfelso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx-1].name,\n            description:datalist[dx-1].description,\n            position:1,\n            column:null\n        }\n        const itemfofel={\n            id:datalist[dx-1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n            position:1,\n            column:null\n        }\n        const itemfo={\n            id:datalist[dx+1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n            position:1,\n            column:null\n        }\n        const itemalso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx+1].name,\n            description:datalist[dx+1].description,\n            position:1,\n            column:null\n        }\n        if(direction==0){\n            this.fetchback(itemalso.id,itemalso,itemfo.id,itemfo)\n        }\n        if(direction==1){\n            this.fetchback(itemfofel.id,itemfofel,itemfelso.id,itemfelso)\n        }\n    }\n\n    fetchback(i,item,i2,item2){\n        fetch(\"/api/todoitems/\"+i, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n        }).catch(error => console.error('Unable to add item.', error))\n        fetch(\"/api/todoitems/\"+i2, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item2)\n        }).catch(error => console.error('Unable to add item.', error))\n    }\n\n\n    renderdatalines(){\n        let renderlines=[]\n        if(this.state.init===false)\n            return\n        for(let k=0;k<10;k++){\n            renderlines.push(this.state.todos[k])\n        }\n        return renderlines\n    }\n    render() {\n\n        return (\n            <Box>\n                {this.initlines()}\n                {this.getmaxid()}\n                <Button sx={{width:300}} startIcon={<AddCircleIcon/>} onClick={()=>this.setState({open:true})}/>\n                <Dialog open={this.state.open} alignItems=\"center\">\n                    <DialogTitle>Add a Task</DialogTitle>\n                    <DialogContentText >To add a new Task please fill the fields below</DialogContentText>\n                    <DialogContent>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Task:\n                            <TextField required type=\"text\" value={this.state.value} onChange={(e)=>this.setState({value: e.target.value})} />\n                            Description:\n                            <TextField type=\"text\" value={this.state.value2} onChange={(e)=>this.setState({value2: e.target.value})} />\n                        </label>\n                        <div> <Button onClick={()=>this.setState({open:false})}>Cancel</Button><Button type=\"submit\" variant=\"text\" value=\"Submit\">Add</Button></div>\n                    </form>\n                    </DialogContent>\n                </Dialog>\n                {this.renderdatalines()}\n            </Box>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            numberOfprojects:0,\n            projectArray:Array(3).fill(''),\n            maxprojectsnumber:10,\n            init:false,\n            maxid:0\n        }\n    }\n\n    fetchcolumn(i){\n        const item={\n            ID:i,\n            TodoItems:null,\n        }\n        fetch('api/columns', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n        })\n            .then(response => response.json())\n            .catch(error => console.error('Unable to add item.', error))\n    }\n\n    addProject(dx){\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        projects.push(\n            <Grid item xs={12} md={3}>\n                    <ProjectBox value={(dx+1)} />\n            </Grid>\n\n            )\n        this.fetchcolumn(dx+1)\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1\n        })\n    }\n    addProjectwithoutfetch(dx){\n        console.log(\"happened\"+dx)\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        projects.push(\n            <Grid item xs={12} md={3}>\n                <ProjectBox value={(dx)} />\n            </Grid>\n\n        )\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1\n        })\n    }\n    clearProjects(){\n        this.deletealltodos()\n        this.setState({\n            projectArray:Array(0),\n        })\n    }\n\n    addlist(data){\n            for (var k = 0; k < data.length; k++) {\n                this.addProjectwithoutfetch(data[k].id);\n            }\n    }\n    initcolumns(){\n        if(this.state.init===false) {\n            this.setState({init:true})\n            const uri = '/api/columns';\n                fetch(uri)\n                    .then(response => response.json())\n                    .then(data => this.addlist(data))\n                    .catch(error => console.error('Unable to get items.', error));\n        }\n    }\n\n    maxid(data){\n        let dx=0;\n        for(let k=0;k<data.length;k++){\n            dx=data[k].id\n        }\n        this.setState({\n            maxid:dx,\n        })\n        for(let l=1;l<=dx;l++){\n            this.deletetodo(l)\n        }\n        for(let h=1;h<=this.state.numberOfprojects;h++){\n            this.deletecolumns(h)\n        }\n        this.setState({numberOfprojects:0})\n    }\n\n    deletecolumns(h){\n        fetch(\"/api/columns/\"+h, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n    }\n    deletetodo(id){\n        fetch(\"/api/todoitems/\"+id, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n    }\n    deletealltodos(){\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.maxid(data))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n\n\n    render() {\n        return (\n            <div >\n                <Box >\n                    <Grid container spacing={2}>\n                        {this.initcolumns()}\n                        {this.state.projectArray}\n                        <Grid item xs={12} md={3}>\n                            <Button variant=\"text\" onClick={()=>this.addProject(this.state.numberOfprojects)}> Add Project</Button>\n                            <Button variant=\"text\" onClick={()=>this.clearProjects()}> Clear Projects</Button>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Main />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"]},"metadata":{},"sourceType":"module"}
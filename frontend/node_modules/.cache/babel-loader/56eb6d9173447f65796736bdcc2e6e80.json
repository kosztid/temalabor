{"ast":null,"code":"var _jsxFileName = \"/Users/dominik/WebstormProjects/temalabmatui/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDialog() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open form dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Email Address\",\n          type: \"email\",\n          fullWidth: true,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormDialog, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = FormDialog;\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'TestName',\n      description: 'sometext',\n      deadline: '2000-12-12'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"N\\xE9v:\", this.state.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Le\\xEDr\\xE1s: \", this.state.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Deadline:\", this.state.deadline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TaskContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n      taskcnt: 0\n    };\n  }\n\n  addTask(name, description, date) {\n    let tasks = this.state.tasks;\n    tasks.push(); //TODO\n\n    this.setstate({\n      tasks: tasks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"TESZT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Dataline extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render(i) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dataline\",\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Clearbutton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render(i) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clearbutton\",\n      onClick: () => this.props.onClick(),\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ProjectBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datalines: Array(10).fill(''),\n      test: 'testname',\n      value: '',\n      count: 0,\n      output: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      output: this.state.value\n    });\n    event.preventDefault();\n    let newarray = this.state.datalines;\n    let prevcount = this.state.count;\n    newarray[this.state.count] = this.state.value;\n    this.setState({\n      count: prevcount + 1,\n      datalines: newarray\n    });\n  }\n\n  resetdatalines() {\n    this.setState({\n      datalines: Array(10).fill(null),\n      count: 0\n    });\n  }\n\n  emptydataline(i) {\n    let datalinesnew = this.state.datalines;\n    datalinesnew[i] = null;\n    this.setState({\n      datalines: datalinesnew\n    });\n    this.reorderdatalines(i);\n    this.renderdatalines();\n  }\n\n  reorderdatalines(i) {\n    let datalinesnew = this.state.datalines;\n    let datacnt = this.state.count;\n    if (i >= datacnt) return;\n\n    for (let j = i; j < datacnt; j++) {\n      datalinesnew[j] = datalinesnew[j + 1];\n    }\n\n    this.setState({\n      datalines: datalinesnew,\n      count: datacnt - 1\n    });\n  }\n\n  updataline(i) {\n    let datalinesnew = this.state.datalines;\n    let buffer = datalinesnew[i - 1];\n    if (i === 0) return;\n    datalinesnew[i - 1] = datalinesnew[i];\n    datalinesnew[i] = buffer;\n    this.setState({\n      datalines: datalinesnew\n    });\n  }\n\n  downdataline(i) {\n    let datalinesnew = this.state.datalines;\n    let buffer = datalinesnew[i + 1];\n    if (i === 6 || this.state.count <= i + 1 || datalinesnew[i - 1] === null) return;\n    datalinesnew[i + 1] = datalinesnew[i];\n    datalinesnew[i] = buffer;\n    this.setState({\n      datalines: datalinesnew\n    });\n  }\n\n  renderdatalines() {\n    let datalinesrender = [];\n\n    for (let i = 0; i < 5; i++) {\n      datalinesrender.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin\",\n        children: [/*#__PURE__*/_jsxDEV(Dataline, {\n          value: this.state.datalines[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Clearbutton, {\n          onClick: () => this.emptydataline(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upbutton\",\n          onClick: () => this.updataline(i),\n          children: \"UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"downbutton\",\n          onClick: () => this.downdataline(i),\n          children: \"DOWN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this));\n    }\n\n    return datalinesrender;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Project Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfields\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputfields\",\n            type: \"text\",\n            value: this.state.value,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"inputbutton\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clearbutton\",\n        onClick: () => this.resetdatalines(),\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), this.renderdatalines()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfprojects: 0,\n      projectArray: Array(3),\n      maxprojectsnumber: 3\n    };\n  }\n\n  addProject() {\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    if (this.state.numberOfprojects >= this.state.maxprojectsnumber) return;\n    projects.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"databox\",\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1\n    });\n  }\n\n  clearProjects() {\n    this.setState({\n      projectArray: Array(3),\n      numberOfprojects: 0\n    });\n  }\n\n  render() {\n    const status = 'Current Project: Témalabor';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(TaskContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [status, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"projectbuttons\",\n          onClick: () => this.addProject(),\n          children: \" Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"projectbuttons\",\n          onClick: () => this.clearProjects(),\n          children: \" Clear Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"projectbuttons\",\n          onClick: () => FormDialog(),\n          children: \" POPUP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), this.state.projectArray]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 317,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["/Users/dominik/WebstormProjects/temalabmatui/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Card","CardActions","CardContent","Button","Typography","ArrowUpwardIcon","ArrowDownwardIcon","AddCircleIcon","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormDialog","open","setOpen","useState","handleClickOpen","handleClose","Task","Component","constructor","props","state","name","description","deadline","render","maxWidth","TaskContainer","tasks","taskcnt","addTask","date","push","setstate","Dataline","i","value","Clearbutton","onClick","ProjectBox","datalines","Array","fill","test","count","output","handleChange","bind","handleSubmit","event","setState","target","preventDefault","newarray","prevcount","resetdatalines","emptydataline","datalinesnew","reorderdatalines","renderdatalines","datacnt","j","updataline","buffer","downdataline","datalinesrender","Main","numberOfprojects","projectArray","maxprojectsnumber","addProject","projects","clearProjects","status","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAEE,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEH,IAAd;AAAoB,MAAA,OAAO,EAAEI,WAA7B;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,gCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,MAAM,EAAC,OAFX;AAGI,UAAA,EAAE,EAAC,MAHP;AAII,UAAA,KAAK,EAAC,eAJV;AAKI,UAAA,IAAI,EAAC,OALT;AAMI,UAAA,SAAS,MANb;AAOI,UAAA,OAAO,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiBI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAxCuBL,U;;KAAAA,U;;AA4CxB,MAAMM,IAAN,SAAmBvB,KAAK,CAACwB,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC,UADE;AAEPC,MAAAA,WAAW,EAAC,UAFL;AAGPC,MAAAA,QAAQ,EAAC;AAHF,KAAX;AAKH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA,8BACI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAA,gCACS,KAAKL,KAAL,CAAWC,IADpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAA,uCACa,KAAKD,KAAL,CAAWE,WADxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,UAAD;AAAA,kCACc,KAAKF,KAAL,CAAWG,QADzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,WAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,SAAS,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,SAAS,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,SAAS,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AAhC6B;;AAkClC,MAAMG,aAAN,SAA4BjC,KAAK,CAACwB,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKE,KAAL,GAAW;AACPO,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,OAAO,EAAC;AAFD,KAAX;AAIH;;AAEDC,EAAAA,OAAO,CAACR,IAAD,EAAMC,WAAN,EAAkBQ,IAAlB,EAAuB;AAC1B,QAAIH,KAAK,GAAC,KAAKP,KAAL,CAAWO,KAArB;AACAA,IAAAA,KAAK,CAACI,IAAN,GAF0B,CAEb;;AACb,SAAKC,QAAL,CAAc;AACVL,MAAAA,KAAK,EAACA;AADI,KAAd;AAGH;;AAEDH,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAvBsC;;AA4B3C,MAAMS,QAAN,SAAuBxC,KAAK,CAACwB,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACDK,EAAAA,MAAM,CAACU,CAAD,EAAG;AACL,wBACI;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAAA,gBACK,KAAKf,KAAL,CAAWgB;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAViC;;AAYtC,MAAMC,WAAN,SAA0B3C,KAAK,CAACwB,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACDK,EAAAA,MAAM,CAACU,CAAD,EAAI;AACN,wBACI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,MAAI,KAAKf,KAAL,CAAWkB,OAAX,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AARoC;;AAWzC,MAAMC,UAAN,SAAyB7C,KAAK,CAACwB,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPmB,MAAAA,SAAS,EAACC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,EAAf,CADH;AAEPC,MAAAA,IAAI,EAAC,UAFE;AAGPP,MAAAA,KAAK,EAAC,EAHC;AAIPQ,MAAAA,KAAK,EAAC,CAJC;AAKPC,MAAAA,MAAM,EAAC;AALA,KAAX;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAACd,MAAAA,KAAK,EAAEa,KAAK,CAACE,MAAN,CAAaf;AAArB,KAAd;AACH;;AAEDY,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAACL,MAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWe;AAApB,KAAd;AACAa,IAAAA,KAAK,CAACG,cAAN;AACA,QAAIC,QAAQ,GAAC,KAAKhC,KAAL,CAAWmB,SAAxB;AACA,QAAIc,SAAS,GAAC,KAAKjC,KAAL,CAAWuB,KAAzB;AACAS,IAAAA,QAAQ,CAAC,KAAKhC,KAAL,CAAWuB,KAAZ,CAAR,GAA2B,KAAKvB,KAAL,CAAWe,KAAtC;AACA,SAAKc,QAAL,CAAc;AACVN,MAAAA,KAAK,EAACU,SAAS,GAAC,CADN;AAEVd,MAAAA,SAAS,EAACa;AAFA,KAAd;AAGH;;AACDE,EAAAA,cAAc,GAAE;AACZ,SAAKL,QAAL,CAAc;AACVV,MAAAA,SAAS,EAACC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf,CADA;AAEVE,MAAAA,KAAK,EAAC;AAFI,KAAd;AAIH;;AACDY,EAAAA,aAAa,CAACrB,CAAD,EAAG;AACZ,QAAIsB,YAAY,GAAC,KAAKpC,KAAL,CAAWmB,SAA5B;AACAiB,IAAAA,YAAY,CAACtB,CAAD,CAAZ,GAAgB,IAAhB;AACA,SAAKe,QAAL,CAAc;AACVV,MAAAA,SAAS,EAACiB;AADA,KAAd;AAGA,SAAKC,gBAAL,CAAsBvB,CAAtB;AACA,SAAKwB,eAAL;AACH;;AACDD,EAAAA,gBAAgB,CAACvB,CAAD,EAAG;AACf,QAAIsB,YAAY,GAAC,KAAKpC,KAAL,CAAWmB,SAA5B;AACA,QAAIoB,OAAO,GAAC,KAAKvC,KAAL,CAAWuB,KAAvB;AACA,QAAGT,CAAC,IAAEyB,OAAN,EACI;;AACJ,SAAI,IAAIC,CAAC,GAAC1B,CAAV,EAAY0B,CAAC,GAACD,OAAd,EAAsBC,CAAC,EAAvB,EAA0B;AACtBJ,MAAAA,YAAY,CAACI,CAAD,CAAZ,GAAgBJ,YAAY,CAACI,CAAC,GAAC,CAAH,CAA5B;AACH;;AACD,SAAKX,QAAL,CAAc;AACVV,MAAAA,SAAS,EAAEiB,YADD;AAEVb,MAAAA,KAAK,EAACgB,OAAO,GAAC;AAFJ,KAAd;AAIH;;AACDE,EAAAA,UAAU,CAAC3B,CAAD,EAAG;AACT,QAAIsB,YAAY,GAAC,KAAKpC,KAAL,CAAWmB,SAA5B;AACA,QAAIuB,MAAM,GAACN,YAAY,CAACtB,CAAC,GAAC,CAAH,CAAvB;AACA,QAAGA,CAAC,KAAG,CAAP,EACI;AACJsB,IAAAA,YAAY,CAACtB,CAAC,GAAC,CAAH,CAAZ,GAAkBsB,YAAY,CAACtB,CAAD,CAA9B;AACAsB,IAAAA,YAAY,CAACtB,CAAD,CAAZ,GAAgB4B,MAAhB;AACA,SAAKb,QAAL,CAAc;AACVV,MAAAA,SAAS,EAACiB;AADA,KAAd;AAGH;;AACDO,EAAAA,YAAY,CAAC7B,CAAD,EAAG;AACX,QAAIsB,YAAY,GAAC,KAAKpC,KAAL,CAAWmB,SAA5B;AACA,QAAIuB,MAAM,GAACN,YAAY,CAACtB,CAAC,GAAC,CAAH,CAAvB;AACA,QAAGA,CAAC,KAAG,CAAJ,IAAS,KAAKd,KAAL,CAAWuB,KAAX,IAAkBT,CAAC,GAAC,CAA7B,IAAkCsB,YAAY,CAACtB,CAAC,GAAC,CAAH,CAAZ,KAAoB,IAAzD,EACI;AACJsB,IAAAA,YAAY,CAACtB,CAAC,GAAC,CAAH,CAAZ,GAAkBsB,YAAY,CAACtB,CAAD,CAA9B;AACAsB,IAAAA,YAAY,CAACtB,CAAD,CAAZ,GAAgB4B,MAAhB;AACA,SAAKb,QAAL,CAAc;AACVV,MAAAA,SAAS,EAACiB;AADA,KAAd;AAGH;;AAEDE,EAAAA,eAAe,GAAE;AACb,QAAIM,eAAe,GAAC,EAApB;;AACA,SAAI,IAAI9B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAsB;AAClB8B,MAAAA,eAAe,CAACjC,IAAhB,eACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWmB,SAAX,CAAqBL,CAArB;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAE,MAAI,KAAKqB,aAAL,CAAmBrB,CAAnB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAA6B,UAAA,OAAO,EAAE,MAAI,KAAK2B,UAAL,CAAgB3B,CAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAI,KAAK6B,YAAL,CAAkB7B,CAAlB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;;AACD,WAAO8B,eAAP;AACH;;AACDxC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,8BACI;AAAA,kDAAkB;AAAO,UAAA,SAAS,EAAC,aAAjB;AAA+B,UAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKuB,YAArB;AAAA,gCACI;AAAA,2CAEI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAA+B,YAAA,IAAI,EAAC,MAApC;AAA2C,YAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWe,KAA7D;AAAoE,YAAA,QAAQ,EAAE,KAAKU;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAC,aAA/B;AAA6C,UAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,MAAI,KAAKS,cAAL,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAYK,KAAKI,eAAL,EAZL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA/GoC;;AAkHzC,MAAMO,IAAN,SAAmBxE,KAAK,CAACwB,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACP8C,MAAAA,gBAAgB,EAAC,CADV;AAEPC,MAAAA,YAAY,EAAC3B,KAAK,CAAC,CAAD,CAFX;AAGP4B,MAAAA,iBAAiB,EAAC;AAHX,KAAX;AAKH;;AAEDC,EAAAA,UAAU,GAAE;AACR,QAAIC,QAAQ,GAAE,EAAd;;AACA,SAAI,IAAIV,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKxC,KAAL,CAAW8C,gBAAzB,EAA0CN,CAAC,EAA3C,EAA8C;AAC1CU,MAAAA,QAAQ,CAACvC,IAAT,CAAc,KAAKX,KAAL,CAAW+C,YAAX,CAAwBP,CAAxB,CAAd;AACH;;AACD,QAAG,KAAKxC,KAAL,CAAW8C,gBAAX,IAA6B,KAAK9C,KAAL,CAAWgD,iBAA3C,EACI;AACJE,IAAAA,QAAQ,CAACvC,IAAT,eACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACK,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAIA,SAAKkB,QAAL,CAAc;AACVkB,MAAAA,YAAY,EAACG,QADH;AAEVJ,MAAAA,gBAAgB,EAAC,KAAK9C,KAAL,CAAW8C,gBAAX,GAA4B;AAFnC,KAAd;AAIH;;AACDK,EAAAA,aAAa,GAAE;AACX,SAAKtB,QAAL,CAAc;AACVkB,MAAAA,YAAY,EAAC3B,KAAK,CAAC,CAAD,CADR;AAEV0B,MAAAA,gBAAgB,EAAC;AAFP,KAAd;AAIH;;AACD1C,EAAAA,MAAM,GAAG;AACL,UAAMgD,MAAM,GAAG,4BAAf;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mBAAKA,MAAL,eACI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAI,KAAKH,UAAL,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAI,KAAKE,aAAL,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAI7D,UAAU,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAQK,KAAKU,KAAL,CAAW+C,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA9C8B,C,CAiDnC;;;AAEAzE,QAAQ,CAAC8B,MAAT,eACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIiD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ,E,CAKA;AACA;AACA;;AACA/E,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function FormDialog() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n                Open form dialog\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To subscribe to this website, please enter your email address here. We\n                        will send updates occasionally.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        variant=\"standard\"\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleClose}>Subscribe</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\n\n\nclass Task extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={\n            name:'TestName',\n            description:'sometext',\n            deadline:'2000-12-12',\n        }\n    }\n    render(){\n        return(\n            <Card sx={{maxWidth:300}}>\n                <CardContent>\n                    <Typography>\n                        Név:{this.state.name}\n                    </Typography>\n                    <Typography>\n                        Leírás: {this.state.description}\n                    </Typography>\n                    <Typography>\n                        Deadline:{this.state.deadline}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button startIcon={<ArrowUpwardIcon/>}/>\n                    <Button startIcon={<ArrowDownwardIcon/>} />\n                    <Button startIcon={<AddCircleIcon/>} />\n                </CardActions>\n            </Card>\n\n\n        )\n    }\n}\nclass TaskContainer extends React.Component{\n    constructor() {\n        super();\n        this.state={\n            tasks:[],\n            taskcnt:0,\n        }\n    }\n\n    addTask(name,description,date){\n        let tasks=this.state.tasks\n        tasks.push() //TODO\n        this.setstate({\n            tasks:tasks,\n        })\n    }\n\n    render() {\n        return (\n            <label>\n                TESZT\n            </label>\n        );\n    }\n}\n\n\n\nclass Dataline extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n    render(i){\n        return(\n            <button className=\"dataline\">\n                {this.props.value}\n            </button>\n        )\n    }\n}\nclass Clearbutton extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n    render(i) {\n        return(\n            <button className=\"clearbutton\" onClick={()=>this.props.onClick()}>Clear</button>\n        )\n    }\n}\n\nclass ProjectBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            datalines:Array(10).fill(''),\n            test:'testname',\n            value:'',\n            count:0,\n            output:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.setState({output: this.state.value })\n        event.preventDefault();\n        let newarray=this.state.datalines\n        let prevcount=this.state.count\n        newarray[this.state.count]=this.state.value\n        this.setState({\n            count:prevcount+1,\n            datalines:newarray})\n    }\n    resetdatalines(){\n        this.setState({\n            datalines:Array(10).fill(null),\n            count:0\n        })\n    }\n    emptydataline(i){\n        let datalinesnew=this.state.datalines\n        datalinesnew[i]=null\n        this.setState({\n            datalines:datalinesnew,\n        })\n        this.reorderdatalines(i)\n        this.renderdatalines()\n    }\n    reorderdatalines(i){\n        let datalinesnew=this.state.datalines\n        let datacnt=this.state.count\n        if(i>=datacnt)\n            return\n        for(let j=i;j<datacnt;j++){\n            datalinesnew[j]=datalinesnew[j+1]\n        }\n        this.setState({\n            datalines: datalinesnew,\n            count:datacnt-1\n        })\n    }\n    updataline(i){\n        let datalinesnew=this.state.datalines\n        let buffer=datalinesnew[i-1]\n        if(i===0)\n            return\n        datalinesnew[i-1]=datalinesnew[i]\n        datalinesnew[i]=buffer\n        this.setState({\n            datalines:datalinesnew\n        })\n    }\n    downdataline(i){\n        let datalinesnew=this.state.datalines\n        let buffer=datalinesnew[i+1]\n        if(i===6 || this.state.count<=i+1 || datalinesnew[i-1]===null)\n            return\n        datalinesnew[i+1]=datalinesnew[i]\n        datalinesnew[i]=buffer\n        this.setState({\n            datalines:datalinesnew\n        })\n    }\n\n    renderdatalines(){\n        let datalinesrender=[]\n        for(let i=0; i<5; i++){\n            datalinesrender.push(\n                <div className=\"margin\">\n                    <Dataline value={this.state.datalines[i]}/>\n                    <Clearbutton onClick={()=>this.emptydataline(i)}/>\n                    <button className=\"upbutton\" onClick={()=>this.updataline(i)}>UP</button>\n                    <button className=\"downbutton\" onClick={()=>this.downdataline(i)}>DOWN</button>\n                </div>\n            )\n        }\n        return datalinesrender\n    }\n    render() {\n\n        return (\n            <div>\n                <h2>Project Name: <input className=\"inputfields\" type=\"text\"/></h2>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Task:\n                        <input className=\"inputfields\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" className=\"inputbutton\" value=\"Submit\"/>\n                </form>\n                <button className=\"clearbutton\" onClick={()=>this.resetdatalines()}>\n                    Clear All\n                </button>\n                {this.renderdatalines()}\n            </div>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            numberOfprojects:0,\n            projectArray:Array(3),\n            maxprojectsnumber:3\n        }\n    }\n\n    addProject(){\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        if(this.state.numberOfprojects>=this.state.maxprojectsnumber)\n            return\n        projects.push(\n            <div className=\"databox\">\n                {<ProjectBox />}\n            </div>)\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1\n        })\n    }\n    clearProjects(){\n        this.setState({\n            projectArray:Array(3),\n            numberOfprojects:0\n        })\n    }\n    render() {\n        const status = 'Current Project: Témalabor';\n        return (\n            <div className=\"game\">\n                <TaskContainer/>\n                <Task/>\n                <h1>{status}\n                    <button className=\"projectbuttons\" onClick={()=>this.addProject()}> Add Project</button>\n                    <button className=\"projectbuttons\" onClick={()=>this.clearProjects()}> Clear Projects</button>\n                    <button className=\"projectbuttons\" onClick={()=>FormDialog()}> POPUP</button>\n                </h1>\n                {this.state.projectArray}\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Main />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dominik/WebstormProjects/temalabmatui/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Box, createTheme, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      columnid: this.props.columnid,\n      name: this.props.name,\n      description: this.props.description,\n      open: false,\n      namemodifyvalue: this.props.name,\n      descriptionmodifyvalue: this.props.description\n    };\n  }\n\n  closeModify() {\n    let namemod = this.state.namemodifyvalue;\n    let desmod = this.state.descriptionmodifyvalue;\n    this.setState({\n      open: false,\n      name: namemod,\n      description: desmod\n    });\n    const item = {\n      id: this.state.id,\n      columnID: this.state.columnid,\n      name: this.state.namemodifyvalue,\n      description: this.state.descriptionmodifyvalue,\n      position: 1,\n      column: null\n    };\n    this.fetchmodify(item);\n  }\n\n  fetchmodify(item) {\n    fetch('/api/todoitems/' + [this.state.id], {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify(item)\n    }).catch(error => console.error('Unable to add item.', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"N\\xE9v:\", this.state.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Le\\xEDr\\xE1s:\", this.state.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.updataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.downdataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.emptydataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: 300\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 61\n            }, this),\n            onClick: () => this.setState({\n              open: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: this.state.open,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              children: \"Modify a Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"To modify a Task please edit the fields below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: () => this.closeModify(),\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Task:\", /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    value: this.state.namemodifyvalue,\n                    onChange: e => this.setState({\n                      namemodifyvalue: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this), \"Description:\", /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    value: this.state.descriptionmodifyvalue,\n                    onChange: e => this.setState({\n                      descriptionmodifyvalue: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => this.setState({\n                      open: false\n                    }),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"text\",\n                    value: \"Submit\",\n                    children: \"Modify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ProjectBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: Array().fill(''),\n      id: this.props.value,\n      datalines: Array().fill(''),\n      datas: Array().fill(''),\n      ids: Array().fill(''),\n      opens: Array().fill(false),\n      test: 'testname',\n      value: '',\n      value2: '',\n      valuemodify: 'aaaaa',\n      value2modify: 'bbbbb',\n      count: 0,\n      open: false,\n      modifydx: 0,\n      init: false,\n      max: false,\n      maxid: 0\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmitmodify = this.handleSubmitmodify.bind(this);\n  }\n\n  handleClickOpenmodify(dx) {\n    let boolarray = this.state.opens;\n    boolarray[dx] = true;\n    let array1 = this.state.datalines;\n    let array2 = this.state.datas;\n    this.setState({\n      opens: boolarray,\n      valuemodify: array1[dx],\n      value2modify: array2[dx],\n      modifydx: dx\n    });\n  }\n\n  handleClosemodify(dx) {\n    let boolarray = this.state.opens;\n    boolarray[dx] = false;\n    this.setState({\n      opens: boolarray\n    });\n  }\n\n  initlines() {\n    if (this.state.init === false) {\n      this.setState({\n        init: true\n      });\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.adddatalines(data)).catch(error => console.error('Unable to get items.', error));\n    }\n  }\n\n  adddatalines(data) {\n    var k = 0;\n    let todolist = [];\n    let cnt = this.state.count;\n\n    for (k = 0; k < data.length; k++) {\n      if (data[k].columnID === this.state.id) {\n        console.log(data[k].name);\n        todolist.push( /*#__PURE__*/_jsxDEV(Todo, {\n          name: data[k].name,\n          description: data[k].description,\n          id: data[k].id,\n          columnid: data[k].columnID,\n          downdataline: i => this.downdataline(i),\n          updataline: i => this.updataline(i),\n          emptydataline: i => this.emptydataline(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 31\n        }, this));\n        cnt++;\n      }\n    }\n\n    this.setState({\n      todos: todolist,\n      count: cnt\n    });\n  }\n\n  getmaxid() {\n    /*  if(this.state.max===false) {\n          const uri = '/api/todoitems';\n          fetch(uri)\n              .then(response => response.json())\n              .then(data => this.maxid(data))\n              .catch(error => console.error('Unable to get items.', error));\n      }\n       */\n    if (this.state.max === false) {\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n    }\n\n    setTimeout(() => {\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n    }, 5000);\n  }\n\n  maxid(data) {\n    var dx = 0;\n\n    for (var k = 0; k < data.length; k++) {\n      dx = data[k].id;\n    }\n\n    this.setState({\n      maxid: dx,\n      max: true\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let newarray = this.state.datalines;\n    let newarray2 = this.state.datas;\n    let newarray3 = this.state.ids;\n    let prevcount = this.state.count;\n    newarray[this.state.count] = this.state.value;\n    newarray2[this.state.count] = this.state.value2;\n    newarray3[this.state.count] = this.state.maxid + 1;\n    let todoslist = this.state.todos;\n    todoslist.push( /*#__PURE__*/_jsxDEV(Todo, {\n      name: this.state.value,\n      description: this.state.value2,\n      id: this.state.maxid + 1,\n      columnid: this.state.id,\n      downdataline: i => this.downdataline(i),\n      updataline: i => this.updataline(i),\n      emptydataline: i => this.emptydataline(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 24\n    }, this));\n    const item = {\n      id: this.state.maxid + 1,\n      columnID: this.state.id,\n      name: this.state.value,\n      description: this.state.value2,\n      position: 1,\n      column: null\n    };\n    fetch('api/todoitems', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).catch(error => console.error('Unable to add item.', error));\n    this.setState({\n      count: prevcount + 1,\n      datalines: newarray,\n      datas: newarray2,\n      ids: newarray3,\n      value: '',\n      value2: '',\n      open: false,\n      max: false,\n      todos: todoslist\n    });\n  }\n\n  handleSubmitmodify(event) {\n    //this.setState({output: this.state.value })\n    event.preventDefault();\n    let newarray = this.state.datalines;\n    let newarray2 = this.state.datas;\n    let dx = this.state.modifydx;\n    newarray[dx] = this.state.valuemodify;\n    newarray2[dx] = this.state.value2modify;\n    let id = this.state.ids[dx];\n    const item = {};\n    fetch('/api/todoitems/' + [id], {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify({\n        id: id,\n        columnID: this.state.id,\n        name: this.state.valuemodify,\n        description: this.state.value2modify,\n        position: 1,\n        column: null\n      })\n    }).catch(error => console.error('Unable to add item.', error));\n    /*    .then(()=>this.setState({\n        datalines:newarray,\n        datas:newarray2,\n        valuemodify:'',\n    }))*/\n\n    this.handleClosemodify(dx);\n  }\n\n  emptydataline(i) {\n    fetch(\"/api/todoitems/\" + i, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n    setTimeout(() => {\n      this.setState({\n        todos: Array().fill(''),\n        init: false\n      });\n    }, 500);\n  }\n\n  updataline(k) {\n    let i = 0;\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.toMoveUP(data, k)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  toMoveUP(data, k) {\n    let dx;\n    let datalist = [];\n\n    for (let d = 0; d < data.length; d++) {\n      if (data[d].columnID === this.state.id) {\n        datalist.push(data[d]);\n      }\n    }\n\n    for (let i = 0; i < datalist.length; i++) {\n      if (datalist[i].id === k) {\n        dx = i;\n      }\n    }\n\n    if (dx === 0) return;\n    const itemfelso = {\n      id: datalist[dx].id,\n      columnID: this.state.id,\n      name: datalist[dx - 1].name,\n      description: datalist[dx - 1].description,\n      position: 1,\n      column: null\n    };\n    const itemalso = {\n      id: datalist[dx - 1].id,\n      columnID: this.state.id,\n      name: datalist[dx].name,\n      description: datalist[dx].description,\n      position: 1,\n      column: null\n    };\n    this.fetchback(itemfelso.id, itemfelso, itemalso.id, itemalso);\n    setTimeout(() => {\n      this.setState({\n        todos: Array().fill(''),\n        init: false\n      });\n    }, 500);\n  }\n\n  downdataline(k) {\n    let i = 0;\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.toMoveDOWN(data, k)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  toMoveDOWN(data, k) {\n    let dx;\n    let datalist = [];\n\n    for (let d = 0; d < data.length; d++) {\n      if (data[d].columnID === this.state.id) {\n        datalist.push(data[d]);\n      }\n    }\n\n    for (let i = 0; i < datalist.length; i++) {\n      if (datalist[i].id === k) {\n        dx = i;\n      }\n    }\n\n    if (dx === datalist.length) return;\n    const itemfelso = {\n      id: datalist[dx].id,\n      columnID: this.state.id,\n      name: datalist[dx + 1].name,\n      description: datalist[dx + 1].description,\n      position: 1,\n      column: null\n    };\n    const itemalso = {\n      id: datalist[dx + 1].id,\n      columnID: this.state.id,\n      name: datalist[dx].name,\n      description: datalist[dx].description,\n      position: 1,\n      column: null\n    };\n    this.fetchback(itemfelso.id, itemfelso, itemalso.id, itemalso);\n    setTimeout(() => {\n      this.setState({\n        todos: Array().fill(''),\n        init: false\n      });\n    }, 500);\n  } //direction 0 downdata, 1 updata\n\n  /*\n  toMove(data,k,direction){\n      let dx\n      let datalist=[]\n      for(let d=0;d<data.length;d++){\n          datalist.push(data[d])\n      }\n      for(let i=0;i<datalist.length;i++){\n          if(datalist[i].id===k){\n              dx=i\n          }\n      }\n      const itemfelso={\n          id:datalist[dx].id,\n          columnID:this.state.id,\n          name:datalist[dx-1].name,\n          description:datalist[dx-1].description,\n          position:1,\n          column:null\n      }\n      const itemfofel={\n          id:datalist[dx-1].id,\n          columnID:this.state.id,\n          name:datalist[dx].name,\n          description:datalist[dx].description,\n          position:1,\n          column:null\n      }\n      const itemfo={\n          id:datalist[dx+1].id,\n          columnID:this.state.id,\n          name:datalist[dx].name,\n          description:datalist[dx].description,\n          position:1,\n          column:null\n      }\n      const itemalso={\n          id:datalist[dx].id,\n          columnID:this.state.id,\n          name:datalist[dx+1].name,\n          description:datalist[dx+1].description,\n          position:1,\n          column:null\n      }\n      if(direction==2){\n          this.fetchback(itemfo.id,itemfo,itemalso.id,itemalso)\n      }\n      if(direction==1){\n          this.fetchback(itemfofel.id,itemfofel,itemfelso.id,itemfelso)\n      }\n      this.setState({todos:Array().fill(''),init:false})\n  }\n  */\n\n\n  fetchback(i, item, i2, item2) {\n    fetch(\"/api/todoitems/\" + i, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).catch(error => console.error('Unable to add item.', error));\n    fetch(\"/api/todoitems/\" + i2, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item2)\n    }).catch(error => console.error('Unable to add item.', error));\n  }\n\n  renderdatalines() {\n    let renderlines = [];\n    if (this.state.init === false) return;\n\n    for (let k = 0; k < 10; k++) {\n      renderlines.push(this.state.todos[k]);\n    }\n\n    return renderlines;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [this.initlines(), this.getmaxid(), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          width: 300\n        },\n        startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 53\n        }, this),\n        onClick: () => this.setState({\n          open: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add a Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"To add a new Task please fill the fields below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Task:\", /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                type: \"text\",\n                value: this.state.value,\n                onChange: e => this.setState({\n                  value: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 29\n              }, this), \"Description:\", /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                value: this.state.value2,\n                onChange: e => this.setState({\n                  value2: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.setState({\n                  open: false\n                }),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"text\",\n                value: \"Submit\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 96\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this), this.renderdatalines()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfprojects: 0,\n      projectArray: Array(3).fill(''),\n      maxprojectsnumber: 10,\n      init: false,\n      maxid: 0\n    };\n  }\n\n  fetchcolumn(i) {\n    const item = {\n      ID: i,\n      TodoItems: null\n    };\n    fetch('api/columns', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).catch(error => console.error('Unable to add item.', error));\n  }\n\n  addProject(dx) {\n    let idx = this.state.maxid + 1;\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    projects.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {\n        value: idx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 13\n    }, this));\n    this.fetchcolumn(idx);\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1,\n      maxid: idx\n    });\n  }\n\n  addProjectwithoutfetch(dx) {\n    let max = this.state.max;\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    projects.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {\n        value: dx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1,\n      maxid: dx\n    });\n  }\n\n  clearProjects() {\n    this.deletealltodos();\n    this.setState({\n      projectArray: Array(0)\n    });\n  }\n\n  addlist(data) {\n    for (var k = 0; k < data.length; k++) {\n      this.addProjectwithoutfetch(data[k].id);\n    }\n  }\n\n  initcolumns() {\n    if (this.state.init === false) {\n      this.setState({\n        init: true\n      });\n      const uri = '/api/columns';\n      fetch(uri).then(response => response.json()).then(data => this.addlist(data)).catch(error => console.error('Unable to get items.', error));\n    }\n  }\n\n  maxid(data) {\n    let dx = 0;\n\n    for (let k = 0; k < data.length; k++) {\n      dx = data[k].id;\n    }\n\n    this.setState({\n      maxid: dx\n    });\n\n    for (let l = 1; l <= dx; l++) {\n      this.deletetodo(l);\n    }\n\n    for (let h = 1; h <= this.state.maxid; h++) {\n      this.deletecolumns(h);\n    }\n\n    this.setState({\n      numberOfprojects: 0\n    });\n  }\n\n  deletecolumns(h) {\n    fetch(\"/api/columns/\" + h, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n  }\n\n  deletetodo(id) {\n    fetch(\"/api/todoitems/\" + id, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n  }\n\n  deletealltodos() {\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [this.initcolumns(), this.state.projectArray, /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              onClick: () => this.addProject(this.state.max),\n              children: \" Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              onClick: () => this.clearProjects(),\n              children: \" Clear Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 677,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/dominik/WebstormProjects/temalabmatui/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Card","CardActions","CardContent","Button","Typography","ArrowUpwardIcon","ArrowDownwardIcon","AddCircleIcon","DeleteIcon","TextField","Dialog","DialogContent","DialogContentText","DialogTitle","Box","createTheme","Grid","Todo","Component","constructor","props","state","id","columnid","name","description","open","namemodifyvalue","descriptionmodifyvalue","closeModify","namemod","desmod","setState","item","columnID","position","column","fetchmodify","fetch","method","headers","body","JSON","stringify","catch","error","console","render","maxWidth","updataline","downdataline","emptydataline","width","e","target","value","ProjectBox","todos","Array","fill","datalines","datas","ids","opens","test","value2","valuemodify","value2modify","count","modifydx","init","max","maxid","handleSubmit","bind","handleSubmitmodify","handleClickOpenmodify","dx","boolarray","array1","array2","handleClosemodify","initlines","uri","then","response","json","data","adddatalines","k","todolist","cnt","length","log","push","i","getmaxid","setTimeout","event","preventDefault","newarray","newarray2","newarray3","prevcount","todoslist","toMoveUP","datalist","d","itemfelso","itemalso","fetchback","toMoveDOWN","i2","item2","renderdatalines","renderlines","Main","numberOfprojects","projectArray","maxprojectsnumber","fetchcolumn","ID","TodoItems","addProject","idx","projects","j","addProjectwithoutfetch","clearProjects","deletealltodos","addlist","initcolumns","l","deletetodo","h","deletecolumns","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {Box, createTheme, Grid} from \"@material-ui/core\";\n\nclass Todo extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            id:this.props.id,\n            columnid:this.props.columnid,\n            name:this.props.name,\n            description:this.props.description,\n            open:false,\n            namemodifyvalue:this.props.name,\n            descriptionmodifyvalue:this.props.description\n\n        }\n\n    }\n    closeModify(){\n        let namemod=this.state.namemodifyvalue\n        let desmod=this.state.descriptionmodifyvalue\n        this.setState({\n            open:false,\n            name:namemod,\n            description:desmod\n        })\n\n        const item={\n            id:this.state.id,\n            columnID:this.state.columnid,\n            name:this.state.namemodifyvalue,\n            description:this.state.descriptionmodifyvalue,\n            position:1,\n            column:null\n        }\n        this.fetchmodify(item)\n\n    }\n\n    fetchmodify(item){\n        fetch('/api/todoitems/'+[this.state.id], {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n            },\n            body: JSON.stringify(item)\n        }).catch(error => console.error('Unable to add item.', error))\n    }\n\n    render() {\n        return(\n            <div className=\"margin\">\n                <Card sx={{maxWidth:300}}>\n                    <CardContent>\n                        <Typography>\n                            Név:{this.state.name}\n                        </Typography>\n                        <Typography>\n                            Leírás:{this.state.description}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button startIcon={<ArrowUpwardIcon/>} onClick={()=>this.props.updataline(this.state.id)}/>\n                        <Button startIcon={<ArrowDownwardIcon/>} onClick={()=>this.props.downdataline(this.state.id)} />\n                        <Button startIcon={<DeleteIcon/>} onClick={()=>this.props.emptydataline(this.state.id)}/>\n                        <Button sx={{width:300}} startIcon={<AddCircleIcon/>} onClick={()=>this.setState({open:true})}/>\n                        <Dialog open={this.state.open} alignItems=\"center\">\n                            <DialogTitle>Modify a Task</DialogTitle>\n                            <DialogContentText >To modify a Task please edit the fields below</DialogContentText>\n                            <DialogContent>\n                                <form onSubmit={()=>this.closeModify()}>\n                                    <label>\n                                        Task:\n                                        <TextField type=\"text\" value={this.state.namemodifyvalue} onChange={(e)=>this.setState({namemodifyvalue: e.target.value})} />\n                                        Description:\n                                        <TextField type=\"text\" value={this.state.descriptionmodifyvalue} onChange={(e)=>this.setState({descriptionmodifyvalue: e.target.value})} />\n                                    </label>\n                                    <div> <Button onClick={()=>this.setState({open:false})}>Cancel</Button>\n                                        <Button type=\"submit\" variant=\"text\" value=\"Submit\">Modify</Button>\n                                    </div>\n                                </form>\n                            </DialogContent>\n                        </Dialog>\n                    </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n\nclass ProjectBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            todos:Array().fill(''),\n            id:this.props.value,\n            datalines:Array().fill(''),\n            datas:Array().fill(''),\n            ids:Array().fill(''),\n            opens:Array().fill(false),\n            test:'testname',\n            value:'',\n            value2:'',\n            valuemodify:'aaaaa',\n            value2modify:'bbbbb',\n            count:0,\n            open:false,\n            modifydx:0,\n            init:false,\n            max:false,\n            maxid:0\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSubmitmodify = this.handleSubmitmodify.bind(this);\n    }\n\n    handleClickOpenmodify(dx){\n        let boolarray=this.state.opens\n        boolarray[dx]=true\n        let array1=this.state.datalines\n        let array2=this.state.datas\n        this.setState({opens:boolarray,\n        valuemodify:array1[dx],\n            value2modify:array2[dx],\n            modifydx:dx\n        })\n    }\n    handleClosemodify(dx){\n        let boolarray=this.state.opens\n        boolarray[dx]=false\n        this.setState({opens:boolarray})\n    }\n\n\n    initlines(){\n        if(this.state.init===false) {\n            this.setState({init:true})\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.adddatalines(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n    }\n    adddatalines(data){\n        var k=0\n        let todolist=[]\n        let cnt=this.state.count\n        for(k=0;k<data.length;k++){\n            if(data[k].columnID===this.state.id){\n                console.log(data[k].name)\n                todolist.push(<Todo name={data[k].name}\n                                    description={data[k].description}\n                                    id={data[k].id}\n                                    columnid={data[k].columnID}\n                                 downdataline={(i)=>this.downdataline(i)}\n                                 updataline={(i)=>this.updataline(i)}\n                                 emptydataline={(i)=>this.emptydataline(i)}\n\n                />)\n                cnt++\n                }\n            }\n        this.setState({todos:todolist,count:cnt})\n\n        }\n\n    getmaxid(){\n      /*  if(this.state.max===false) {\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n\n\n       */\n        if(this.state.max===false){\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n\n        setTimeout(() => {  const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error)); }, 5000);\n    }\n    maxid(data){\n        var dx=0;\n        for(var k=0;k<data.length;k++){\n            dx=data[k].id\n        }\n        this.setState({\n            maxid:dx,\n            max:true\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let newarray=this.state.datalines\n        let newarray2=this.state.datas\n        let newarray3=this.state.ids\n        let prevcount=this.state.count\n        newarray[this.state.count]=this.state.value\n        newarray2[this.state.count]=this.state.value2\n        newarray3[this.state.count]=this.state.maxid+1\n        let todoslist=this.state.todos\n        todoslist.push(<Todo name={this.state.value}\n                            description={this.state.value2}\n                            id={this.state.maxid+1}\n                             columnid={this.state.id}\n                            downdataline={(i)=>this.downdataline(i)}\n                            updataline={(i)=>this.updataline(i)}\n                            emptydataline={(i)=>this.emptydataline(i)}\n        />)\n        const item={\n            id:this.state.maxid+1,\n            columnID:this.state.id,\n            name:this.state.value,\n            description:this.state.value2,\n            position:1,\n            column:null\n        }\n        fetch('api/todoitems', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n            })\n            .then(response => response.json())\n            .catch(error => console.error('Unable to add item.', error))\n        this.setState({\n            count:prevcount+1,\n            datalines:newarray,\n            datas:newarray2,\n            ids:newarray3,\n            value:'',\n            value2:'',\n            open:false,\n            max:false,\n            todos:todoslist\n        })\n\n\n\n    }\n\n\n    handleSubmitmodify(event) {\n        //this.setState({output: this.state.value })\n        event.preventDefault();\n        let newarray=this.state.datalines\n        let newarray2=this.state.datas\n        let dx=this.state.modifydx\n        newarray[dx]=this.state.valuemodify\n        newarray2[dx]=this.state.value2modify\n        let id=this.state.ids[dx]\n\n        const item={\n\n        }\n        fetch('/api/todoitems/'+[id], {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n            },\n            body: JSON.stringify({\n                    id:id,\n                    columnID:this.state.id,\n                    name:this.state.valuemodify,\n                    description:this.state.value2modify,\n                    position:1,\n                    column:null\n            })\n        }).catch(error => console.error('Unable to add item.', error))\n        /*    .then(()=>this.setState({\n            datalines:newarray,\n            datas:newarray2,\n            valuemodify:'',\n        }))*/\n\n\n        this.handleClosemodify(dx)\n    }\n\n    emptydataline(i){\n\n        fetch(\"/api/todoitems/\"+i, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n        setTimeout(() => { this.setState({todos:Array().fill(''),init:false})},500)\n    }\n    updataline(k){\n        let i=0\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.toMoveUP(data,k))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n    toMoveUP(data,k){\n        let dx\n        let datalist=[]\n        for(let d=0;d<data.length;d++){\n            if(data[d].columnID===this.state.id){\n                datalist.push(data[d])\n            }\n        }\n        for(let i=0;i<datalist.length;i++){\n            if(datalist[i].id===k){\n                dx=i\n            }\n        }\n        if(dx===0)\n            return\n\n        const itemfelso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx-1].name,\n            description:datalist[dx-1].description,\n            position:1,\n            column:null\n        }\n\n        const itemalso={\n            id:datalist[dx-1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n            position:1,\n            column:null\n        }\n        this.fetchback(itemfelso.id,itemfelso,itemalso.id,itemalso)\n\n        setTimeout(() => { this.setState({todos:Array().fill(''),init:false})},500)\n    }\n\n    downdataline(k){\n        let i=0\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.toMoveDOWN(data,k))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n\n    toMoveDOWN(data,k){\n        let dx\n        let datalist=[]\n        for(let d=0;d<data.length;d++){\n            if(data[d].columnID===this.state.id){\n                datalist.push(data[d])\n            }\n        }\n        for(let i=0;i<datalist.length;i++){\n            if(datalist[i].id===k){\n                dx=i\n            }\n        }\n        if(dx===datalist.length)\n            return\n\n        const itemfelso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx+1].name,\n            description:datalist[dx+1].description,\n            position:1,\n            column:null\n        }\n\n        const itemalso={\n            id:datalist[dx+1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n            position:1,\n            column:null\n        }\n        this.fetchback(itemfelso.id,itemfelso,itemalso.id,itemalso)\n\n        setTimeout(() => { this.setState({todos:Array().fill(''),init:false})},500)\n    }\n\n    //direction 0 downdata, 1 updata\n    /*\n    toMove(data,k,direction){\n        let dx\n        let datalist=[]\n        for(let d=0;d<data.length;d++){\n            datalist.push(data[d])\n        }\n        for(let i=0;i<datalist.length;i++){\n            if(datalist[i].id===k){\n                dx=i\n            }\n        }\n        const itemfelso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx-1].name,\n            description:datalist[dx-1].description,\n            position:1,\n            column:null\n        }\n        const itemfofel={\n            id:datalist[dx-1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n            position:1,\n            column:null\n        }\n        const itemfo={\n            id:datalist[dx+1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n            position:1,\n            column:null\n        }\n        const itemalso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx+1].name,\n            description:datalist[dx+1].description,\n            position:1,\n            column:null\n        }\n        if(direction==2){\n            this.fetchback(itemfo.id,itemfo,itemalso.id,itemalso)\n        }\n        if(direction==1){\n            this.fetchback(itemfofel.id,itemfofel,itemfelso.id,itemfelso)\n        }\n        this.setState({todos:Array().fill(''),init:false})\n    }\n    */\n\n    fetchback(i,item,i2,item2){\n        fetch(\"/api/todoitems/\"+i, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n        }).catch(error => console.error('Unable to add item.', error))\n        fetch(\"/api/todoitems/\"+i2, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item2)\n        }).catch(error => console.error('Unable to add item.', error))\n    }\n\n\n    renderdatalines(){\n        let renderlines=[]\n        if(this.state.init===false)\n            return\n        for(let k=0;k<10;k++){\n            renderlines.push(this.state.todos[k])\n        }\n        return renderlines\n    }\n    render() {\n\n        return (\n            <Box>\n                {this.initlines()}\n                {this.getmaxid()}\n                <Button sx={{width:300}} startIcon={<AddCircleIcon/>} onClick={()=>this.setState({open:true})}/>\n                <Dialog open={this.state.open} alignItems=\"center\">\n                    <DialogTitle>Add a Task</DialogTitle>\n                    <DialogContentText >To add a new Task please fill the fields below</DialogContentText>\n                    <DialogContent>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Task:\n                            <TextField required type=\"text\" value={this.state.value} onChange={(e)=>this.setState({value: e.target.value})} />\n                            Description:\n                            <TextField type=\"text\" value={this.state.value2} onChange={(e)=>this.setState({value2: e.target.value})} />\n                        </label>\n                        <div> <Button onClick={()=>this.setState({open:false})}>Cancel</Button><Button type=\"submit\" variant=\"text\" value=\"Submit\">Add</Button></div>\n                    </form>\n                    </DialogContent>\n                </Dialog>\n                {this.renderdatalines()}\n            </Box>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            numberOfprojects:0,\n            projectArray:Array(3).fill(''),\n            maxprojectsnumber:10,\n            init:false,\n            maxid:0,\n        }\n    }\n\n    fetchcolumn(i){\n        const item={\n            ID:i,\n            TodoItems:null,\n        }\n        fetch('api/columns', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n        })\n            .then(response => response.json())\n            .catch(error => console.error('Unable to add item.', error))\n    }\n\n    addProject(dx){\n        let idx=this.state.maxid+1\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        projects.push(\n            <Grid item xs={12} md={3}>\n                    <ProjectBox value={(idx)} />\n            </Grid>\n\n            )\n        this.fetchcolumn(idx)\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1,\n            maxid:idx\n        })\n    }\n    addProjectwithoutfetch(dx){\n        let max=this.state.max\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        projects.push(\n            <Grid item xs={12} md={3}>\n                <ProjectBox value={(dx)} />\n            </Grid>\n\n        )\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1,\n            maxid:dx\n        })\n    }\n    clearProjects(){\n        this.deletealltodos()\n        this.setState({\n            projectArray:Array(0),\n        })\n    }\n\n    addlist(data){\n            for (var k = 0; k < data.length; k++) {\n                this.addProjectwithoutfetch(data[k].id);\n            }\n    }\n    initcolumns(){\n        if(this.state.init===false) {\n            this.setState({init:true})\n            const uri = '/api/columns';\n                fetch(uri)\n                    .then(response => response.json())\n                    .then(data => this.addlist(data))\n                    .catch(error => console.error('Unable to get items.', error));\n        }\n    }\n\n    maxid(data){\n        let dx=0;\n        for(let k=0;k<data.length;k++){\n            dx=data[k].id\n        }\n        this.setState({\n            maxid:dx,\n        })\n        for(let l=1;l<=dx;l++){\n            this.deletetodo(l)\n        }\n        for(let h=1;h<=this.state.maxid;h++){\n            this.deletecolumns(h)\n        }\n        this.setState({numberOfprojects:0})\n    }\n\n    deletecolumns(h){\n        fetch(\"/api/columns/\"+h, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n    }\n    deletetodo(id){\n        fetch(\"/api/todoitems/\"+id, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n    }\n    deletealltodos(){\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.maxid(data))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n\n\n    render() {\n        return (\n            <div >\n                <Box >\n                    <Grid container spacing={2}>\n                        {this.initcolumns()}\n                        {this.state.projectArray}\n                        <Grid item xs={12} md={3}>\n                            <Button variant=\"text\" onClick={()=>this.addProject(this.state.max)}> Add Project</Button>\n                            <Button variant=\"text\" onClick={()=>this.clearProjects()}> Clear Projects</Button>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Main />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"]},"metadata":{},"sourceType":"module"}
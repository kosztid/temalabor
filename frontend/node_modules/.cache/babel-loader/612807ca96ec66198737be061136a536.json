{"ast":null,"code":"var _jsxFileName = \"/Users/dominik/Documents/GitHub/temalabor/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Box, createTheme, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      columnid: this.props.columnid,\n      name: this.props.name,\n      description: this.props.description,\n      open: false,\n      namemodifyvalue: this.props.name,\n      descriptionmodifyvalue: this.props.description\n    };\n  }\n\n  closeModify() {\n    let namemod = this.state.namemodifyvalue;\n    let desmod = this.state.descriptionmodifyvalue;\n    this.setState({\n      open: false,\n      name: namemod,\n      description: desmod\n    });\n    const item = {\n      id: this.state.id,\n      columnID: this.state.columnid,\n      name: this.state.namemodifyvalue,\n      description: this.state.descriptionmodifyvalue //    position:1,\n      //    column:null\n\n    };\n    this.fetchmodify(item);\n  }\n\n  fetchmodify(item) {\n    fetch('/api/todoitems/' + [this.state.id], {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify(item)\n    }).catch(error => console.error('Unable to add item.', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"N\\xE9v:\", this.state.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Le\\xEDr\\xE1s:\", this.state.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.updataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.downdataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 44\n            }, this),\n            onClick: () => this.props.emptydataline(this.state.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: 300\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 61\n            }, this),\n            onClick: () => this.setState({\n              open: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: this.state.open,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              children: \"Modify a Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"To modify a Task please edit the fields below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: () => this.closeModify(),\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Task:\", /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    value: this.state.namemodifyvalue,\n                    onChange: e => this.setState({\n                      namemodifyvalue: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this), \"Description:\", /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    value: this.state.descriptionmodifyvalue,\n                    onChange: e => this.setState({\n                      descriptionmodifyvalue: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => this.setState({\n                      open: false\n                    }),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"text\",\n                    value: \"Submit\",\n                    children: \"Modify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ProjectBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: Array().fill(''),\n      id: this.props.value,\n      value: '',\n      value2: '',\n      count: 0,\n      open: false,\n      init: false,\n      max: false,\n      maxid: 0\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClosemodify(dx) {\n    let boolarray = this.state.opens;\n    boolarray[dx] = false;\n    this.setState({\n      opens: boolarray\n    });\n  }\n\n  initlines() {\n    if (this.state.init === false) {\n      this.setState({\n        init: true\n      });\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.adddatalines(data)).catch(error => console.error('Unable to get items.', error));\n    }\n  }\n\n  adddatalines(data) {\n    let k = 0;\n    let todolist = [];\n    let cnt = this.state.count;\n\n    for (k = 0; k < data.length; k++) {\n      if (data[k].columnID === this.state.id) {\n        console.log(data[k].name);\n        todolist.push( /*#__PURE__*/_jsxDEV(Todo, {\n          name: data[k].name,\n          description: data[k].description,\n          id: data[k].id,\n          columnid: data[k].columnID,\n          downdataline: i => this.downdataline(i),\n          updataline: i => this.updataline(i),\n          emptydataline: i => this.emptydataline(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 31\n        }, this));\n        cnt++;\n      }\n    }\n\n    this.setState({\n      todos: todolist,\n      count: cnt\n    });\n  }\n\n  getmaxid() {\n    if (this.state.max === false) {\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n    }\n\n    setTimeout(() => {\n      const uri = '/api/todoitems';\n      fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n    }, 5000);\n  }\n\n  maxid(data) {\n    var dx = 0;\n\n    for (var k = 0; k < data.length; k++) {\n      dx = data[k].id;\n    }\n\n    this.setState({\n      maxid: dx,\n      max: true\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let prevcount = this.state.count;\n    let todoslist = this.state.todos;\n    const item = {\n      columnID: this.state.id,\n      name: this.state.value,\n      description: this.state.value2\n    };\n    fetch('api/todoitems', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).then(data => todoslist.push( /*#__PURE__*/_jsxDEV(Todo, {\n      name: data.name,\n      description: this.state.value2,\n      columnid: this.state.id,\n      downdataline: i => this.downdataline(i),\n      updataline: i => this.updataline(i),\n      emptydataline: i => this.emptydataline(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 32\n    }, this))).catch(error => console.error('Unable to add item.', error));\n    this.setState({\n      count: prevcount + 1,\n      value: '',\n      value2: '',\n      open: false,\n      max: false,\n      todos: todoslist\n    });\n  }\n\n  emptydataline(i) {\n    fetch(\"/api/todoitems/\" + i, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n    setTimeout(() => {\n      this.setState({\n        todos: Array().fill(''),\n        init: false\n      });\n    }, 500);\n  }\n\n  updataline(k) {\n    let i = 0;\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.toMoveUP(data, k)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  toMoveUP(data, k) {\n    let dx;\n    let datalist = [];\n\n    for (let d = 0; d < data.length; d++) {\n      if (data[d].columnID === this.state.id) {\n        datalist.push(data[d]);\n      }\n    }\n\n    for (let i = 0; i < datalist.length; i++) {\n      if (datalist[i].id === k) {\n        dx = i;\n      }\n    }\n\n    if (dx === 0) return;\n    const itemfelso = {\n      id: datalist[dx].id,\n      columnID: this.state.id,\n      name: datalist[dx - 1].name,\n      description: datalist[dx - 1].description\n    };\n    const itemalso = {\n      id: datalist[dx - 1].id,\n      columnID: this.state.id,\n      name: datalist[dx].name,\n      description: datalist[dx].description\n    };\n    this.fetchback(itemfelso.id, itemfelso, itemalso.id, itemalso);\n    setTimeout(() => {\n      this.setState({\n        todos: Array().fill(''),\n        init: false\n      });\n    }, 500);\n  }\n\n  downdataline(k) {\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.toMoveDOWN(data, k)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  toMoveDOWN(data, k) {\n    let dx;\n    let datalist = [];\n\n    for (let d = 0; d < data.length; d++) {\n      if (data[d].columnID === this.state.id) {\n        datalist.push(data[d]);\n      }\n    }\n\n    for (let i = 0; i < datalist.length; i++) {\n      if (datalist[i].id === k) {\n        dx = i;\n      }\n    }\n\n    if (dx === datalist.length) return;\n    const itemfelso = {\n      id: datalist[dx].id,\n      columnID: this.state.id,\n      name: datalist[dx + 1].name,\n      description: datalist[dx + 1].description\n    };\n    const itemalso = {\n      id: datalist[dx + 1].id,\n      columnID: this.state.id,\n      name: datalist[dx].name,\n      description: datalist[dx].description\n    };\n    this.fetchback(itemfelso.id, itemfelso, itemalso.id, itemalso);\n    setTimeout(() => {\n      this.setState({\n        todos: Array().fill(''),\n        init: false\n      });\n    }, 500);\n  }\n\n  fetchback(i, item, i2, item2) {\n    fetch(\"/api/todoitems/\" + i, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).catch(error => console.error('Unable to add item.', error));\n    fetch(\"/api/todoitems/\" + i2, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item2)\n    }).catch(error => console.error('Unable to add item.', error));\n  }\n\n  renderdatalines() {\n    let renderlines = [];\n    if (this.state.init === false) return;\n\n    for (let k = 0; k < 10; k++) {\n      renderlines.push(this.state.todos[k]);\n    }\n\n    return renderlines;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [this.initlines(), this.getmaxid(), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          width: 300\n        },\n        startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 53\n        }, this),\n        onClick: () => this.setState({\n          open: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add a Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"To add a new Task please fill the fields below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Task:\", /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                type: \"text\",\n                value: this.state.value,\n                onChange: e => this.setState({\n                  value: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 29\n              }, this), \"Description:\", /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                value: this.state.value2,\n                onChange: e => this.setState({\n                  value2: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.setState({\n                  open: false\n                }),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"text\",\n                value: \"Submit\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 96\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), this.renderdatalines()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfprojects: 0,\n      projectArray: Array(3).fill(''),\n      maxprojectsnumber: 10,\n      init: false,\n      maxid: 0\n    };\n  }\n\n  fetchcolumn(i) {\n    const item = {\n      ID: i\n    };\n    fetch('api/columns', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).catch(error => console.error('Unable to add item.', error));\n  }\n\n  addProject() {\n    let idx = this.state.maxid + 1;\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    projects.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {\n        value: idx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this));\n    this.fetchcolumn(idx);\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1,\n      maxid: idx\n    });\n  }\n\n  addProjectwithoutfetch(dx) {\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    projects.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {\n        value: dx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1,\n      maxid: dx\n    });\n  }\n\n  clearProjects() {\n    this.deletealltodos();\n    this.setState({\n      projectArray: Array(0)\n    });\n  }\n\n  addlist(data) {\n    for (var k = 0; k < data.length; k++) {\n      this.addProjectwithoutfetch(data[k].id);\n    }\n  }\n\n  initcolumns() {\n    if (this.state.init === false) {\n      this.setState({\n        init: true\n      });\n      const uri = '/api/columns';\n      fetch(uri).then(response => response.json()).then(data => this.addlist(data)).catch(error => console.error('Unable to get items.', error));\n    }\n  }\n\n  maxid(data) {\n    let dx = 0;\n\n    for (let k = 0; k < data.length; k++) {\n      dx = data[k].id;\n    }\n\n    this.setState({\n      maxidtodo: dx\n    });\n\n    for (let l = 1; l <= dx; l++) {\n      this.deletetodo(l);\n    }\n\n    for (let h = 1; h <= this.state.maxid; h++) {\n      this.deletecolumns(h);\n    }\n\n    this.setState({\n      numberOfprojects: 0\n    });\n  }\n\n  deletecolumns(h) {\n    fetch(\"/api/columns/\" + h, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n  }\n\n  deletetodo(id) {\n    fetch(\"/api/todoitems/\" + id, {\n      method: 'DELETE'\n    }).catch(error => console.error('Unable to delete item.', error));\n  }\n\n  deletealltodos() {\n    const uri = '/api/todoitems';\n    fetch(uri).then(response => response.json()).then(data => this.maxid(data)).catch(error => console.error('Unable to get items.', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [this.initcolumns(), this.state.projectArray, /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              onClick: () => this.addProject(this.state.max),\n              children: \" Add Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              onClick: () => this.clearProjects(),\n              children: \" Clear Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 530,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/dominik/Documents/GitHub/temalabor/frontend/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Card","CardActions","CardContent","Button","Typography","ArrowUpwardIcon","ArrowDownwardIcon","AddCircleIcon","DeleteIcon","TextField","Dialog","DialogContent","DialogContentText","DialogTitle","Box","createTheme","Grid","Todo","Component","constructor","props","state","id","columnid","name","description","open","namemodifyvalue","descriptionmodifyvalue","closeModify","namemod","desmod","setState","item","columnID","fetchmodify","fetch","method","headers","body","JSON","stringify","catch","error","console","render","maxWidth","updataline","downdataline","emptydataline","width","e","target","value","ProjectBox","todos","Array","fill","value2","count","init","max","maxid","handleSubmit","bind","handleClosemodify","dx","boolarray","opens","initlines","uri","then","response","json","data","adddatalines","k","todolist","cnt","length","log","push","i","getmaxid","setTimeout","event","preventDefault","prevcount","todoslist","toMoveUP","datalist","d","itemfelso","itemalso","fetchback","toMoveDOWN","i2","item2","renderdatalines","renderlines","Main","numberOfprojects","projectArray","maxprojectsnumber","fetchcolumn","ID","addProject","idx","projects","j","addProjectwithoutfetch","clearProjects","deletealltodos","addlist","initcolumns","maxidtodo","l","deletetodo","h","deletecolumns","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {Box, createTheme, Grid} from \"@material-ui/core\";\n\nclass Todo extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            id:this.props.id,\n            columnid:this.props.columnid,\n            name:this.props.name,\n            description:this.props.description,\n            open:false,\n            namemodifyvalue:this.props.name,\n            descriptionmodifyvalue:this.props.description\n\n        }\n\n    }\n    closeModify(){\n        let namemod=this.state.namemodifyvalue\n        let desmod=this.state.descriptionmodifyvalue\n        this.setState({\n            open:false,\n            name:namemod,\n            description:desmod\n        })\n\n        const item={\n            id:this.state.id,\n            columnID:this.state.columnid,\n            name:this.state.namemodifyvalue,\n            description:this.state.descriptionmodifyvalue,\n        //    position:1,\n        //    column:null\n        }\n        this.fetchmodify(item)\n\n    }\n\n    fetchmodify(item){\n        fetch('/api/todoitems/'+[this.state.id], {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n            },\n            body: JSON.stringify(item)\n        }).catch(error => console.error('Unable to add item.', error))\n    }\n\n    render() {\n        return(\n            <div className=\"margin\">\n                <Card sx={{maxWidth:300}}>\n                    <CardContent>\n                        <Typography>\n                            Név:{this.state.name}\n                        </Typography>\n                        <Typography>\n                            Leírás:{this.state.description}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button startIcon={<ArrowUpwardIcon/>} onClick={()=>this.props.updataline(this.state.id)}/>\n                        <Button startIcon={<ArrowDownwardIcon/>} onClick={()=>this.props.downdataline(this.state.id)} />\n                        <Button startIcon={<DeleteIcon/>} onClick={()=>this.props.emptydataline(this.state.id)}/>\n                        <Button sx={{width:300}} startIcon={<AddCircleIcon/>} onClick={()=>this.setState({open:true})}/>\n                        <Dialog open={this.state.open} alignItems=\"center\">\n                            <DialogTitle>Modify a Task</DialogTitle>\n                            <DialogContentText >To modify a Task please edit the fields below</DialogContentText>\n                            <DialogContent>\n                                <form onSubmit={()=>this.closeModify()}>\n                                    <label>\n                                        Task:\n                                        <TextField type=\"text\" value={this.state.namemodifyvalue} onChange={(e)=>this.setState({namemodifyvalue: e.target.value})} />\n                                        Description:\n                                        <TextField type=\"text\" value={this.state.descriptionmodifyvalue} onChange={(e)=>this.setState({descriptionmodifyvalue: e.target.value})} />\n                                    </label>\n                                    <div> <Button onClick={()=>this.setState({open:false})}>Cancel</Button>\n                                        <Button type=\"submit\" variant=\"text\" value=\"Submit\">Modify</Button>\n                                    </div>\n                                </form>\n                            </DialogContent>\n                        </Dialog>\n                    </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n\nclass ProjectBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            todos:Array().fill(''),\n            id:this.props.value,\n            value:'',\n            value2:'',\n            count:0,\n            open:false,\n            init:false,\n            max:false,\n            maxid:0\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleClosemodify(dx){\n        let boolarray=this.state.opens\n        boolarray[dx]=false\n        this.setState({opens:boolarray})\n    }\n\n\n    initlines(){\n        if(this.state.init===false) {\n            this.setState({init:true})\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.adddatalines(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n    }\n    adddatalines(data){\n        let k=0\n        let todolist=[]\n        let cnt=this.state.count\n        for(k=0;k<data.length;k++){\n            if(data[k].columnID===this.state.id){\n                console.log(data[k].name)\n                todolist.push(<Todo name={data[k].name}\n                                    description={data[k].description}\n                                    id={data[k].id}\n                                    columnid={data[k].columnID}\n                                 downdataline={(i)=>this.downdataline(i)}\n                                 updataline={(i)=>this.updataline(i)}\n                                 emptydataline={(i)=>this.emptydataline(i)}\n\n                />)\n                cnt++\n                }\n            }\n        this.setState({todos:todolist,count:cnt})\n\n        }\n\n    getmaxid(){\n        if(this.state.max===false){\n            const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error));\n        }\n\n        setTimeout(() => {  const uri = '/api/todoitems';\n            fetch(uri)\n                .then(response => response.json())\n                .then(data => this.maxid(data))\n                .catch(error => console.error('Unable to get items.', error)); }, 5000);\n    }\n    maxid(data){\n        var dx=0;\n        for(var k=0;k<data.length;k++){\n            dx=data[k].id\n        }\n        this.setState({\n            maxid:dx,\n            max:true\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let prevcount=this.state.count\n        let todoslist=this.state.todos\n\n        const item={\n            columnID:this.state.id,\n            name:this.state.value,\n            description:this.state.value2,\n        }\n        fetch('api/todoitems', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n            })\n            .then(response => response.json())\n            .then(data =>\n                todoslist.push(<Todo name={data.name}\n                                     description={this.state.value2}\n                                     columnid={this.state.id}\n                                     downdataline={(i)=>this.downdataline(i)}\n                                     updataline={(i)=>this.updataline(i)}\n                                     emptydataline={(i)=>this.emptydataline(i)}\n                />))\n            .catch(error => console.error('Unable to add item.', error))\n        this.setState({\n            count:prevcount+1,\n            value:'',\n            value2:'',\n            open:false,\n            max:false,\n            todos:todoslist\n        })\n\n\n\n    }\n    emptydataline(i){\n\n        fetch(\"/api/todoitems/\"+i, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n        setTimeout(() => { this.setState({todos:Array().fill(''),init:false})},500)\n    }\n    updataline(k){\n        let i=0\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.toMoveUP(data,k))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n    toMoveUP(data,k){\n        let dx\n        let datalist=[]\n        for(let d=0;d<data.length;d++){\n            if(data[d].columnID===this.state.id){\n                datalist.push(data[d])\n            }\n        }\n        for(let i=0;i<datalist.length;i++){\n            if(datalist[i].id===k){\n                dx=i\n            }\n        }\n        if(dx===0)\n            return\n\n        const itemfelso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx-1].name,\n            description:datalist[dx-1].description,\n        }\n\n        const itemalso={\n            id:datalist[dx-1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n        }\n        this.fetchback(itemfelso.id,itemfelso,itemalso.id,itemalso)\n\n        setTimeout(() => { this.setState({todos:Array().fill(''),init:false})},500)\n    }\n\n    downdataline(k){\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.toMoveDOWN(data,k))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n\n    toMoveDOWN(data,k){\n        let dx\n        let datalist=[]\n        for(let d=0;d<data.length;d++){\n            if(data[d].columnID===this.state.id){\n                datalist.push(data[d])\n            }\n        }\n        for(let i=0;i<datalist.length;i++){\n            if(datalist[i].id===k){\n                dx=i\n            }\n        }\n        if(dx===datalist.length)\n            return\n\n        const itemfelso={\n            id:datalist[dx].id,\n            columnID:this.state.id,\n            name:datalist[dx+1].name,\n            description:datalist[dx+1].description,\n        }\n\n        const itemalso={\n            id:datalist[dx+1].id,\n            columnID:this.state.id,\n            name:datalist[dx].name,\n            description:datalist[dx].description,\n        }\n        this.fetchback(itemfelso.id,itemfelso,itemalso.id,itemalso)\n\n        setTimeout(() => { this.setState({todos:Array().fill(''),init:false})},500)\n    }\n\n    fetchback(i,item,i2,item2){\n        fetch(\"/api/todoitems/\"+i, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n        }).catch(error => console.error('Unable to add item.', error))\n        fetch(\"/api/todoitems/\"+i2, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item2)\n        }).catch(error => console.error('Unable to add item.', error))\n    }\n\n\n    renderdatalines(){\n        let renderlines=[]\n        if(this.state.init===false)\n            return\n        for(let k=0;k<10;k++){\n            renderlines.push(this.state.todos[k])\n        }\n        return renderlines\n    }\n    render() {\n\n        return (\n            <Box>\n                {this.initlines()}\n                {this.getmaxid()}\n                <Button sx={{width:300}} startIcon={<AddCircleIcon/>} onClick={()=>this.setState({open:true})}/>\n                <Dialog open={this.state.open} alignItems=\"center\">\n                    <DialogTitle>Add a Task</DialogTitle>\n                    <DialogContentText >To add a new Task please fill the fields below</DialogContentText>\n                    <DialogContent>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Task:\n                            <TextField required type=\"text\" value={this.state.value} onChange={(e)=>this.setState({value: e.target.value})} />\n                            Description:\n                            <TextField type=\"text\" value={this.state.value2} onChange={(e)=>this.setState({value2: e.target.value})} />\n                        </label>\n                        <div> <Button onClick={()=>this.setState({open:false})}>Cancel</Button><Button type=\"submit\" variant=\"text\" value=\"Submit\">Add</Button></div>\n                    </form>\n                    </DialogContent>\n                </Dialog>\n                {this.renderdatalines()}\n            </Box>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            numberOfprojects:0,\n            projectArray:Array(3).fill(''),\n            maxprojectsnumber:10,\n            init:false,\n            maxid:0,\n        }\n    }\n\n    fetchcolumn(i){\n        const item={\n            ID:i,\n        }\n        fetch('api/columns', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n        })\n            .then(response => response.json())\n            .catch(error => console.error('Unable to add item.', error))\n    }\n\n    addProject(){\n        let idx=this.state.maxid+1\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        projects.push(\n            <Grid item xs={12} md={3}>\n                    <ProjectBox value={(idx)} />\n            </Grid>\n\n            )\n        this.fetchcolumn(idx)\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1,\n            maxid:idx\n        })\n    }\n    addProjectwithoutfetch(dx){\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        projects.push(\n            <Grid item xs={12} md={3}>\n                <ProjectBox value={(dx)} />\n            </Grid>\n\n        )\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1,\n            maxid:dx\n        })\n    }\n    clearProjects(){\n        this.deletealltodos()\n        this.setState({\n            projectArray:Array(0),\n        })\n    }\n\n    addlist(data){\n            for (var k = 0; k < data.length; k++) {\n                this.addProjectwithoutfetch(data[k].id);\n            }\n    }\n    initcolumns(){\n        if(this.state.init===false) {\n            this.setState({init:true})\n            const uri = '/api/columns';\n                fetch(uri)\n                    .then(response => response.json())\n                    .then(data => this.addlist(data))\n                    .catch(error => console.error('Unable to get items.', error));\n        }\n    }\n\n    maxid(data){\n        let dx=0;\n        for(let k=0;k<data.length;k++){\n            dx=data[k].id\n        }\n        this.setState({\n            maxidtodo:dx,\n        })\n        for(let l=1;l<=dx;l++){\n            this.deletetodo(l)\n        }\n        for(let h=1;h<=this.state.maxid;h++){\n            this.deletecolumns(h)\n        }\n        this.setState({numberOfprojects:0})\n    }\n\n    deletecolumns(h){\n        fetch(\"/api/columns/\"+h, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n    }\n    deletetodo(id){\n        fetch(\"/api/todoitems/\"+id, {\n            method: 'DELETE'\n        })\n            .catch(error => console.error('Unable to delete item.', error));\n    }\n    deletealltodos(){\n        const uri = '/api/todoitems';\n        fetch(uri)\n            .then(response => response.json())\n            .then(data => this.maxid(data))\n            .catch(error => console.error('Unable to get items.', error));\n    }\n\n\n    render() {\n        return (\n            <div >\n                <Box >\n                    <Grid container spacing={2}>\n                        {this.initcolumns()}\n                        {this.state.projectArray}\n                        <Grid item xs={12} md={3}>\n                            <Button variant=\"text\" onClick={()=>this.addProject(this.state.max)}> Add Project</Button>\n                            <Button variant=\"text\" onClick={()=>this.clearProjects()}> Clear Projects</Button>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Main />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dominik/WebstormProjects/temalabmatui/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FormClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.doSomethingWithInput = this.doSomethingWithInput.bind(this);\n    this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTextFieldChange(event) {\n    event.preventDefault();\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  doSomethingWithInput(event) {\n    event.preventDefault();\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      value: this.state.value\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputfields\",\n            type: \"text\",\n            value: this.state.value,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"inputbutton\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default function FormDialog(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = value => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 32\n      }, this),\n      onClick: handleClickOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FormClass, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormDialog, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = FormDialog;\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'TestName',\n      description: 'sometext',\n      deadline: '2000-12-12',\n      selectedvalue: '',\n      open: false\n    };\n  }\n\n  AddTest(newname) {\n    this.setState({\n      name: newname\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"N\\xE9v:\", this.props.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass TaskContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n      taskcnt: 0\n    };\n  }\n\n  addTask(name, description, date) {\n    let tasks = this.state.tasks;\n    tasks.push(); //TODO\n\n    this.setstate({\n      tasks: tasks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"TESZT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Dataline extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render(i) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dataline\",\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Clearbutton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render(i) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clearbutton\",\n      onClick: () => this.props.onClick(),\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ProjectBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datalines: Array(10).fill(''),\n      test: 'testname',\n      value: '',\n      count: 0,\n      output: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      output: this.state.value\n    });\n    event.preventDefault();\n    let newarray = this.state.datalines;\n    let prevcount = this.state.count;\n    newarray[this.state.count] = this.state.value;\n    this.setState({\n      count: prevcount + 1,\n      datalines: newarray\n    });\n  }\n\n  resetdatalines() {\n    this.setState({\n      datalines: Array(10).fill(null),\n      count: 0\n    });\n  }\n\n  emptydataline(i) {\n    let datalinesnew = this.state.datalines;\n    datalinesnew[i] = null;\n    this.setState({\n      datalines: datalinesnew\n    });\n    this.reorderdatalines(i);\n    this.renderdatalines();\n  }\n\n  reorderdatalines(i) {\n    let datalinesnew = this.state.datalines;\n    let datacnt = this.state.count;\n    if (i >= datacnt) return;\n\n    for (let j = i; j < datacnt; j++) {\n      datalinesnew[j] = datalinesnew[j + 1];\n    }\n\n    this.setState({\n      datalines: datalinesnew,\n      count: datacnt - 1\n    });\n  }\n\n  updataline(i) {\n    let datalinesnew = this.state.datalines;\n    let buffer = datalinesnew[i - 1];\n    if (i === 0) return;\n    datalinesnew[i - 1] = datalinesnew[i];\n    datalinesnew[i] = buffer;\n    this.setState({\n      datalines: datalinesnew\n    });\n  }\n\n  downdataline(i) {\n    let datalinesnew = this.state.datalines;\n    let buffer = datalinesnew[i + 1];\n    if (i === 6 || this.state.count <= i + 1 || datalinesnew[i - 1] === null) return;\n    datalinesnew[i + 1] = datalinesnew[i];\n    datalinesnew[i] = buffer;\n    this.setState({\n      datalines: datalinesnew\n    });\n  }\n\n  renderdatalines() {\n    let datalinesrender = [];\n\n    for (let i = 0; i < this.state.count; i++) {\n      datalinesrender.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"N\\xE9v:\", this.state.datalines[i]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 48\n              }, this),\n              onClick: () => this.updataline(i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 48\n              }, this),\n              onClick: () => this.downdataline(i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this));\n    }\n\n    return datalinesrender;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputfields\",\n            type: \"text\",\n            value: this.state.value,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"inputbutton\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clearbutton\",\n        onClick: () => this.resetdatalines(),\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), this.renderdatalines()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfprojects: 0,\n      projectArray: Array(3),\n      maxprojectsnumber: 3\n    };\n  }\n\n  addProject() {\n    let projects = [];\n\n    for (let j = 0; j < this.state.numberOfprojects; j++) {\n      projects.push(this.state.projectArray[j]);\n    }\n\n    if (this.state.numberOfprojects >= this.state.maxprojectsnumber) return;\n    projects.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"databox\",\n      children: /*#__PURE__*/_jsxDEV(ProjectBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      projectArray: projects,\n      numberOfprojects: this.state.numberOfprojects + 1\n    });\n  }\n\n  clearProjects() {\n    this.setState({\n      projectArray: Array(3),\n      numberOfprojects: 0\n    });\n  }\n\n  render() {\n    const status = 'Current Project: Témalabor';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(TaskContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [status, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"projectbuttons\",\n          onClick: () => this.addProject(),\n          children: \" Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"projectbuttons\",\n          onClick: () => this.clearProjects(),\n          children: \" Clear Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormDialog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this), this.state.projectArray]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 365,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["/Users/dominik/WebstormProjects/temalabmatui/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Card","CardActions","CardContent","Button","Typography","ArrowUpwardIcon","ArrowDownwardIcon","AddCircleIcon","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormClass","Component","constructor","props","state","value","doSomethingWithInput","bind","handleTextFieldChange","handleChange","handleSubmit","event","preventDefault","setState","target","render","FormDialog","open","setOpen","useState","handleClickOpen","handleClose","Task","name","description","deadline","selectedvalue","AddTest","newname","maxWidth","TaskContainer","tasks","taskcnt","addTask","date","push","setstate","Dataline","i","Clearbutton","onClick","ProjectBox","datalines","Array","fill","test","count","output","newarray","prevcount","resetdatalines","emptydataline","datalinesnew","reorderdatalines","renderdatalines","datacnt","j","updataline","buffer","downdataline","datalinesrender","Main","numberOfprojects","projectArray","maxprojectsnumber","addProject","projects","clearProjects","status","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nclass FormClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        };\n        this.doSomethingWithInput = this.doSomethingWithInput.bind(this);\n        this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleTextFieldChange(event) {\n        event.preventDefault();\n        this.setState({\n            value: event.target.value,\n        });\n    }\n\n    doSomethingWithInput(event) {\n        event.preventDefault();\n        this.setState({\n            value:event.target.value\n        })\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event){\n        this.setState({\n            value:this.state.value\n        })\n        event.preventDefault();\n    }\n    render() {\n        return(\n            <>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Task:\n                        <input className=\"inputfields\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" className=\"inputbutton\" value=\"Submit\"/>\n                </form>\n            </>\n        );\n    }\n}\n\n\nexport default function FormDialog(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = (value) => {\n        setOpen(false);\n    };\n    return (\n        <div>\n            <Button startIcon={<AddCircleIcon/>} onClick={handleClickOpen}/>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Subscribe</DialogTitle>\n                <DialogContent>\n                    <FormClass/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleClose}>Subscribe</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\n\nclass Task extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={\n            name:'TestName',\n            description:'sometext',\n            deadline:'2000-12-12',\n            selectedvalue:'',\n            open:false,\n        }\n    }\n\n    AddTest(newname){\n        this.setState({\n            name:newname\n        })\n    }\n    render(){\n        return(\n            <Card sx={{maxWidth:300}}>\n                <CardContent>\n                    <Typography>\n                        Név:{this.props.value}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button startIcon={<ArrowUpwardIcon/>}/>\n                    <Button startIcon={<ArrowDownwardIcon/>} />\n                </CardActions>\n            </Card>\n\n\n        )\n    }\n}\nclass TaskContainer extends React.Component{\n    constructor() {\n        super();\n        this.state={\n            tasks:[],\n            taskcnt:0,\n        }\n    }\n\n    addTask(name,description,date){\n        let tasks=this.state.tasks\n        tasks.push() //TODO\n        this.setstate({\n            tasks:tasks,\n        })\n    }\n\n    render() {\n        return (\n            <label>\n                TESZT\n            </label>\n        );\n    }\n}\n\n\n\nclass Dataline extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n    render(i){\n        return(\n            <button className=\"dataline\">\n                {this.props.value}\n            </button>\n        )\n    }\n}\nclass Clearbutton extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n    render(i) {\n        return(\n            <button className=\"clearbutton\" onClick={()=>this.props.onClick()}>Clear</button>\n        )\n    }\n}\n\nclass ProjectBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            datalines:Array(10).fill(''),\n            test:'testname',\n            value:'',\n            count:0,\n            output:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.setState({output: this.state.value })\n        event.preventDefault();\n        let newarray=this.state.datalines\n        let prevcount=this.state.count\n        newarray[this.state.count]=this.state.value\n        this.setState({\n            count:prevcount+1,\n            datalines:newarray})\n    }\n    resetdatalines(){\n        this.setState({\n            datalines:Array(10).fill(null),\n            count:0\n        })\n    }\n    emptydataline(i){\n        let datalinesnew=this.state.datalines\n        datalinesnew[i]=null\n        this.setState({\n            datalines:datalinesnew,\n        })\n        this.reorderdatalines(i)\n        this.renderdatalines()\n    }\n    reorderdatalines(i){\n        let datalinesnew=this.state.datalines\n        let datacnt=this.state.count\n        if(i>=datacnt)\n            return\n        for(let j=i;j<datacnt;j++){\n            datalinesnew[j]=datalinesnew[j+1]\n        }\n        this.setState({\n            datalines: datalinesnew,\n            count:datacnt-1\n        })\n    }\n    updataline(i){\n        let datalinesnew=this.state.datalines\n        let buffer=datalinesnew[i-1]\n        if(i===0)\n            return\n        datalinesnew[i-1]=datalinesnew[i]\n        datalinesnew[i]=buffer\n        this.setState({\n            datalines:datalinesnew\n        })\n    }\n    downdataline(i){\n        let datalinesnew=this.state.datalines\n        let buffer=datalinesnew[i+1]\n        if(i===6 || this.state.count<=i+1 || datalinesnew[i-1]===null)\n            return\n        datalinesnew[i+1]=datalinesnew[i]\n        datalinesnew[i]=buffer\n        this.setState({\n            datalines:datalinesnew\n        })\n    }\n\n    renderdatalines(){\n        let datalinesrender=[]\n        for(let i=0; i<this.state.count; i++){\n            datalinesrender.push(\n                <div className=\"margin\">\n                    <Card sx={{maxWidth:300}}>\n                        <CardContent>\n                            <Typography>\n                                Név:{this.state.datalines[i]}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button startIcon={<ArrowUpwardIcon/>} onClick={()=>this.updataline(i)}/>\n                            <Button startIcon={<ArrowDownwardIcon/>} onClick={()=>this.downdataline(i)} />\n                        </CardActions>\n                    </Card>\n                </div>\n            )\n        }\n        return datalinesrender\n    }\n    render() {\n\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Task:\n                        <input className=\"inputfields\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" className=\"inputbutton\" value=\"Submit\"/>\n                </form>\n                <button className=\"clearbutton\" onClick={()=>this.resetdatalines()}>\n                    Clear All\n                </button>\n                {this.renderdatalines()}\n            </div>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            numberOfprojects:0,\n            projectArray:Array(3),\n            maxprojectsnumber:3\n        }\n    }\n\n    addProject(){\n        let projects= []\n        for(let j=0;j<this.state.numberOfprojects;j++){\n            projects.push(this.state.projectArray[j])\n        }\n        if(this.state.numberOfprojects>=this.state.maxprojectsnumber)\n            return\n        projects.push(\n            <div className=\"databox\">\n                {<ProjectBox />}\n            </div>)\n        this.setState({\n            projectArray:projects,\n            numberOfprojects:this.state.numberOfprojects+1\n        })\n    }\n    clearProjects(){\n        this.setState({\n            projectArray:Array(3),\n            numberOfprojects:0\n        })\n    }\n    render() {\n        const status = 'Current Project: Témalabor';\n        return (\n            <div className=\"game\">\n                <TaskContainer/>\n                <Task/>\n                <h1>{status}\n                    <button className=\"projectbuttons\" onClick={()=>this.addProject()}> Add Project</button>\n                    <button className=\"projectbuttons\" onClick={()=>this.clearProjects()}> Clear Projects</button>\n                    <FormDialog/>\n                </h1>\n                {this.state.projectArray}\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Main />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}